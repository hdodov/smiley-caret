{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","main/js/src/event.js","../node_modules/fuse.js/dist/fuse.js","../node_modules/smiley-caret-data/entities.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","updateExtensionIcon","chrome","storage","local","get","data","browserAction","setIcon","path","active","ENTITIES","EntitiesFuse","shouldSort","threshold","location","distance","maxPatternLength","minMatchCharLength","keys","runtime","onMessage","addListener","request","sender","respond","id","emoji","coloncode","search","onClicked","tab","newActiveState","set","tabs","query","sendMessage","root","factory","define","amd","this","modules","__webpack_require__","moduleId","installedModules","m","c","value","d","name","getter","Object","defineProperty","configurable","enumerable","__esModule","object","property","prototype","hasOwnProperty","p","obj","toString","_createClass","defineProperties","target","props","descriptor","writable","key","Constructor","protoProps","staticProps","bitapRegexSearch","bitapSearch","patternAlphabet","Bitap","pattern","_ref","_ref$location","undefined","_ref$distance","_ref$threshold","_ref$maxPatternLength","_ref$isCaseSensitive","isCaseSensitive","_ref$tokenSeparator","tokenSeparator","_ref$findAllMatches","findAllMatches","_ref$minMatchCharLeng","instance","TypeError","_classCallCheck","options","toLowerCase","text","isMatch","score","matchedIndices","_options","_options2","isArray","deepValue","list","dotIndex","indexOf","firstSegment","remaining","slice","len","push","matchmask","arguments","start","end","match","mask","charAt","_i","SPECIAL_CHARS_REGEX","regex","RegExp","replace","matches","matchesLen","_ref$errors","errors","_ref$currentLocation","currentLocation","_ref$expectedLocation","expectedLocation","accuracy","proximity","Math","abs","bitapScore","textLen","currentThreshold","bestLocation","patternLen","matchMask","min","lastIndexOf","_score","lastBitArr","finalScore","binMax","binMin","binMid","floor","max","finish","bitArr","Array","j","charMatch","Fuse","_ref$caseSensitive","caseSensitive","_ref$id","_ref$keys","_ref$shouldSort","_ref$getFn","getFn","_ref$sortFn","sortFn","b","_ref$tokenize","tokenize","_ref$matchAllTokens","matchAllTokens","_ref$includeMatches","includeMatches","_ref$includeScore","includeScore","_ref$verbose","verbose","setCollection","_log","_prepareSearchers2","_prepareSearchers","tokenSearchers","fullSearcher","_search2","_search","weights","results","_computeScore","_sort","_format","tokens","split","resultMap","_analyze","record","index","_len","item","keysLen","weight","_ref2","_ref3","_ref2$arrayIndex","arrayIndex","_ref3$tokenSearchers","_ref3$fullSearcher","_ref3$resultMap","_ref3$results","exists","averageScore","numTextMatches","mainSearchResult","words","scores","tokenSearcher","hasMatchInText","word","tokenSearchResult","scoresLen","_i2","checkTextMatches","existingResult","output","_i3","scoreLen","totalScore","bestScore","nScore","sort","finalOutput","JSON","stringify","transformers","result","indices","_len2","_console","console","log","apply"],"mappings":"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","file":"event.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var ENTITIES = require('smiley-caret-data/entities');\r\nvar Fuse = require('fuse.js'); // .js is in the package name\r\n\r\nvar EntitiesFuse = new Fuse(ENTITIES, {\r\n    shouldSort: true,\r\n    threshold: 0.3,\r\n    location: 0,\r\n    distance: 100,\r\n    maxPatternLength: 32,\r\n    minMatchCharLength: 1,\r\n    keys: [1, 2]\r\n});\r\n\r\nchrome.runtime.onMessage.addListener(function (request, sender, respond) {\r\n    if (request.id !== \"get_coloncode_emoji\") return;\r\n\r\n    var emoji = null;\r\n\r\n    for (var i = 0; i < ENTITIES.length; i++) {\r\n        if (ENTITIES[i][1] === request.coloncode) {\r\n            emoji = ENTITIES[i][0];\r\n            break;\r\n        }\r\n    }\r\n\r\n    respond(emoji);\r\n});\r\n\r\nchrome.runtime.onMessage.addListener(function (request, sender, respond) {\r\n    if (request.id !== \"get_coloncodes\") return;\r\n\r\n    var result = EntitiesFuse.search(request.search);\r\n    respond(result);\r\n});\r\n\r\nchrome.browserAction.onClicked.addListener(function (tab) {\r\n    chrome.storage.local.get(\"active\", function (data) {\r\n        var isActive = (data.active !== false)\r\n        ,   newActiveState = !isActive;\r\n\r\n        chrome.storage.local.set({\r\n            active: newActiveState\r\n        }, function () {\r\n            chrome.tabs.query({}, function (tabs) {\r\n                for (var i = 0; i < tabs.length; i++) {\r\n                    chrome.tabs.sendMessage(tabs[i].id, {\r\n                        id: \"update_behavior\",\r\n                        data: {\r\n                            active: newActiveState\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n            updateExtensionIcon();\r\n        });\r\n    });  \r\n});\r\n\r\nfunction updateExtensionIcon() {\r\n    chrome.storage.local.get(\"active\", function (data) {\r\n        chrome.browserAction.setIcon({\r\n            path: (data.active !== false)\r\n                ? \"img/icon-16.png\"\r\n                : \"img/icon-16-inactive.png\"\r\n        });\r\n    });\r\n}\r\n\r\nupdateExtensionIcon();","/*!\n * Fuse.js v3.2.0 - Lightweight fuzzy-search (http://fusejs.io)\n * \n * Copyright (c) 2012-2017 Kirollos Risk (http://kiro.me)\n * All Rights Reserved. Apache Software License 2.0\n * \n * http://www.apache.org/licenses/LICENSE-2.0\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Fuse\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Fuse\"] = factory();\n\telse\n\t\troot[\"Fuse\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 8);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]';\n};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar bitapRegexSearch = __webpack_require__(5);\nvar bitapSearch = __webpack_require__(7);\nvar patternAlphabet = __webpack_require__(4);\n\nvar Bitap = function () {\n  function Bitap(pattern, _ref) {\n    var _ref$location = _ref.location,\n        location = _ref$location === undefined ? 0 : _ref$location,\n        _ref$distance = _ref.distance,\n        distance = _ref$distance === undefined ? 100 : _ref$distance,\n        _ref$threshold = _ref.threshold,\n        threshold = _ref$threshold === undefined ? 0.6 : _ref$threshold,\n        _ref$maxPatternLength = _ref.maxPatternLength,\n        maxPatternLength = _ref$maxPatternLength === undefined ? 32 : _ref$maxPatternLength,\n        _ref$isCaseSensitive = _ref.isCaseSensitive,\n        isCaseSensitive = _ref$isCaseSensitive === undefined ? false : _ref$isCaseSensitive,\n        _ref$tokenSeparator = _ref.tokenSeparator,\n        tokenSeparator = _ref$tokenSeparator === undefined ? / +/g : _ref$tokenSeparator,\n        _ref$findAllMatches = _ref.findAllMatches,\n        findAllMatches = _ref$findAllMatches === undefined ? false : _ref$findAllMatches,\n        _ref$minMatchCharLeng = _ref.minMatchCharLength,\n        minMatchCharLength = _ref$minMatchCharLeng === undefined ? 1 : _ref$minMatchCharLeng;\n\n    _classCallCheck(this, Bitap);\n\n    this.options = {\n      location: location,\n      distance: distance,\n      threshold: threshold,\n      maxPatternLength: maxPatternLength,\n      isCaseSensitive: isCaseSensitive,\n      tokenSeparator: tokenSeparator,\n      findAllMatches: findAllMatches,\n      minMatchCharLength: minMatchCharLength\n    };\n\n    this.pattern = this.options.isCaseSensitive ? pattern : pattern.toLowerCase();\n\n    if (this.pattern.length <= maxPatternLength) {\n      this.patternAlphabet = patternAlphabet(this.pattern);\n    }\n  }\n\n  _createClass(Bitap, [{\n    key: 'search',\n    value: function search(text) {\n      if (!this.options.isCaseSensitive) {\n        text = text.toLowerCase();\n      }\n\n      // Exact match\n      if (this.pattern === text) {\n        return {\n          isMatch: true,\n          score: 0,\n          matchedIndices: [[0, text.length - 1]]\n        };\n      }\n\n      // When pattern length is greater than the machine word length, just do a a regex comparison\n      var _options = this.options,\n          maxPatternLength = _options.maxPatternLength,\n          tokenSeparator = _options.tokenSeparator;\n\n      if (this.pattern.length > maxPatternLength) {\n        return bitapRegexSearch(text, this.pattern, tokenSeparator);\n      }\n\n      // Otherwise, use Bitap algorithm\n      var _options2 = this.options,\n          location = _options2.location,\n          distance = _options2.distance,\n          threshold = _options2.threshold,\n          findAllMatches = _options2.findAllMatches,\n          minMatchCharLength = _options2.minMatchCharLength;\n\n      return bitapSearch(text, this.pattern, this.patternAlphabet, {\n        location: location,\n        distance: distance,\n        threshold: threshold,\n        findAllMatches: findAllMatches,\n        minMatchCharLength: minMatchCharLength\n      });\n    }\n  }]);\n\n  return Bitap;\n}();\n\n// let x = new Bitap(\"od mn war\", {})\n// let result = x.search(\"Old Man's War\")\n// console.log(result)\n\nmodule.exports = Bitap;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar isArray = __webpack_require__(0);\n\nvar deepValue = function deepValue(obj, path, list) {\n  if (!path) {\n    // If there's no path left, we've gotten to the object we care about.\n    list.push(obj);\n  } else {\n    var dotIndex = path.indexOf('.');\n    var firstSegment = path;\n    var remaining = null;\n\n    if (dotIndex !== -1) {\n      firstSegment = path.slice(0, dotIndex);\n      remaining = path.slice(dotIndex + 1);\n    }\n\n    var value = obj[firstSegment];\n\n    if (value !== null && value !== undefined) {\n      if (!remaining && (typeof value === 'string' || typeof value === 'number')) {\n        list.push(value.toString());\n      } else if (isArray(value)) {\n        // Search each item in the array.\n        for (var i = 0, len = value.length; i < len; i += 1) {\n          deepValue(value[i], remaining, list);\n        }\n      } else if (remaining) {\n        // An object. Recurse further.\n        deepValue(value, remaining, list);\n      }\n    }\n  }\n\n  return list;\n};\n\nmodule.exports = function (obj, path) {\n  return deepValue(obj, path, []);\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function () {\n  var matchmask = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var minMatchCharLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n  var matchedIndices = [];\n  var start = -1;\n  var end = -1;\n  var i = 0;\n\n  for (var len = matchmask.length; i < len; i += 1) {\n    var match = matchmask[i];\n    if (match && start === -1) {\n      start = i;\n    } else if (!match && start !== -1) {\n      end = i - 1;\n      if (end - start + 1 >= minMatchCharLength) {\n        matchedIndices.push([start, end]);\n      }\n      start = -1;\n    }\n  }\n\n  // (i-1 - start) + 1 => i - start\n  if (matchmask[i - 1] && i - start >= minMatchCharLength) {\n    matchedIndices.push([start, i - 1]);\n  }\n\n  return matchedIndices;\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (pattern) {\n  var mask = {};\n  var len = pattern.length;\n\n  for (var i = 0; i < len; i += 1) {\n    mask[pattern.charAt(i)] = 0;\n  }\n\n  for (var _i = 0; _i < len; _i += 1) {\n    mask[pattern.charAt(_i)] |= 1 << len - _i - 1;\n  }\n\n  return mask;\n};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar SPECIAL_CHARS_REGEX = /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;\n\nmodule.exports = function (text, pattern) {\n  var tokenSeparator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : / +/g;\n\n  var regex = new RegExp(pattern.replace(SPECIAL_CHARS_REGEX, '\\\\$&').replace(tokenSeparator, '|'));\n  var matches = text.match(regex);\n  var isMatch = !!matches;\n  var matchedIndices = [];\n\n  if (isMatch) {\n    for (var i = 0, matchesLen = matches.length; i < matchesLen; i += 1) {\n      var match = matches[i];\n      matchedIndices.push([text.indexOf(match), match.length - 1]);\n    }\n  }\n\n  return {\n    // TODO: revisit this score\n    score: isMatch ? 0.5 : 1,\n    isMatch: isMatch,\n    matchedIndices: matchedIndices\n  };\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (pattern, _ref) {\n  var _ref$errors = _ref.errors,\n      errors = _ref$errors === undefined ? 0 : _ref$errors,\n      _ref$currentLocation = _ref.currentLocation,\n      currentLocation = _ref$currentLocation === undefined ? 0 : _ref$currentLocation,\n      _ref$expectedLocation = _ref.expectedLocation,\n      expectedLocation = _ref$expectedLocation === undefined ? 0 : _ref$expectedLocation,\n      _ref$distance = _ref.distance,\n      distance = _ref$distance === undefined ? 100 : _ref$distance;\n\n  var accuracy = errors / pattern.length;\n  var proximity = Math.abs(expectedLocation - currentLocation);\n\n  if (!distance) {\n    // Dodge divide by zero error.\n    return proximity ? 1.0 : accuracy;\n  }\n\n  return accuracy + proximity / distance;\n};\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar bitapScore = __webpack_require__(6);\nvar matchedIndices = __webpack_require__(3);\n\nmodule.exports = function (text, pattern, patternAlphabet, _ref) {\n  var _ref$location = _ref.location,\n      location = _ref$location === undefined ? 0 : _ref$location,\n      _ref$distance = _ref.distance,\n      distance = _ref$distance === undefined ? 100 : _ref$distance,\n      _ref$threshold = _ref.threshold,\n      threshold = _ref$threshold === undefined ? 0.6 : _ref$threshold,\n      _ref$findAllMatches = _ref.findAllMatches,\n      findAllMatches = _ref$findAllMatches === undefined ? false : _ref$findAllMatches,\n      _ref$minMatchCharLeng = _ref.minMatchCharLength,\n      minMatchCharLength = _ref$minMatchCharLeng === undefined ? 1 : _ref$minMatchCharLeng;\n\n  var expectedLocation = location;\n  // Set starting location at beginning text and initialize the alphabet.\n  var textLen = text.length;\n  // Highest score beyond which we give up.\n  var currentThreshold = threshold;\n  // Is there a nearby exact match? (speedup)\n  var bestLocation = text.indexOf(pattern, expectedLocation);\n\n  var patternLen = pattern.length;\n\n  // a mask of the matches\n  var matchMask = [];\n  for (var i = 0; i < textLen; i += 1) {\n    matchMask[i] = 0;\n  }\n\n  if (bestLocation !== -1) {\n    var score = bitapScore(pattern, {\n      errors: 0,\n      currentLocation: bestLocation,\n      expectedLocation: expectedLocation,\n      distance: distance\n    });\n    currentThreshold = Math.min(score, currentThreshold);\n\n    // What about in the other direction? (speed up)\n    bestLocation = text.lastIndexOf(pattern, expectedLocation + patternLen);\n\n    if (bestLocation !== -1) {\n      var _score = bitapScore(pattern, {\n        errors: 0,\n        currentLocation: bestLocation,\n        expectedLocation: expectedLocation,\n        distance: distance\n      });\n      currentThreshold = Math.min(_score, currentThreshold);\n    }\n  }\n\n  // Reset the best location\n  bestLocation = -1;\n\n  var lastBitArr = [];\n  var finalScore = 1;\n  var binMax = patternLen + textLen;\n\n  var mask = 1 << patternLen - 1;\n\n  for (var _i = 0; _i < patternLen; _i += 1) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from the match location we can stray\n    // at this error level.\n    var binMin = 0;\n    var binMid = binMax;\n\n    while (binMin < binMid) {\n      var _score3 = bitapScore(pattern, {\n        errors: _i,\n        currentLocation: expectedLocation + binMid,\n        expectedLocation: expectedLocation,\n        distance: distance\n      });\n\n      if (_score3 <= currentThreshold) {\n        binMin = binMid;\n      } else {\n        binMax = binMid;\n      }\n\n      binMid = Math.floor((binMax - binMin) / 2 + binMin);\n    }\n\n    // Use the result from this iteration as the maximum for the next.\n    binMax = binMid;\n\n    var start = Math.max(1, expectedLocation - binMid + 1);\n    var finish = findAllMatches ? textLen : Math.min(expectedLocation + binMid, textLen) + patternLen;\n\n    // Initialize the bit array\n    var bitArr = Array(finish + 2);\n\n    bitArr[finish + 1] = (1 << _i) - 1;\n\n    for (var j = finish; j >= start; j -= 1) {\n      var currentLocation = j - 1;\n      var charMatch = patternAlphabet[text.charAt(currentLocation)];\n\n      if (charMatch) {\n        matchMask[currentLocation] = 1;\n      }\n\n      // First pass: exact match\n      bitArr[j] = (bitArr[j + 1] << 1 | 1) & charMatch;\n\n      // Subsequent passes: fuzzy match\n      if (_i !== 0) {\n        bitArr[j] |= (lastBitArr[j + 1] | lastBitArr[j]) << 1 | 1 | lastBitArr[j + 1];\n      }\n\n      if (bitArr[j] & mask) {\n        finalScore = bitapScore(pattern, {\n          errors: _i,\n          currentLocation: currentLocation,\n          expectedLocation: expectedLocation,\n          distance: distance\n        });\n\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (finalScore <= currentThreshold) {\n          // Indeed it is\n          currentThreshold = finalScore;\n          bestLocation = currentLocation;\n\n          // Already passed `loc`, downhill from here on in.\n          if (bestLocation <= expectedLocation) {\n            break;\n          }\n\n          // When passing `bestLocation`, don't exceed our current distance from `expectedLocation`.\n          start = Math.max(1, 2 * expectedLocation - bestLocation);\n        }\n      }\n    }\n\n    // No hope for a (better) match at greater error levels.\n    var _score2 = bitapScore(pattern, {\n      errors: _i + 1,\n      currentLocation: expectedLocation,\n      expectedLocation: expectedLocation,\n      distance: distance\n    });\n\n    if (_score2 > currentThreshold) {\n      break;\n    }\n\n    lastBitArr = bitArr;\n  }\n\n  // Count exact matches (those with a score of 0) to be \"almost\" exact\n  return {\n    isMatch: bestLocation >= 0,\n    score: finalScore === 0 ? 0.001 : finalScore,\n    matchedIndices: matchedIndices(matchMask, minMatchCharLength)\n  };\n};\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Bitap = __webpack_require__(1);\nvar deepValue = __webpack_require__(2);\nvar isArray = __webpack_require__(0);\n\nvar Fuse = function () {\n  function Fuse(list, _ref) {\n    var _ref$location = _ref.location,\n        location = _ref$location === undefined ? 0 : _ref$location,\n        _ref$distance = _ref.distance,\n        distance = _ref$distance === undefined ? 100 : _ref$distance,\n        _ref$threshold = _ref.threshold,\n        threshold = _ref$threshold === undefined ? 0.6 : _ref$threshold,\n        _ref$maxPatternLength = _ref.maxPatternLength,\n        maxPatternLength = _ref$maxPatternLength === undefined ? 32 : _ref$maxPatternLength,\n        _ref$caseSensitive = _ref.caseSensitive,\n        caseSensitive = _ref$caseSensitive === undefined ? false : _ref$caseSensitive,\n        _ref$tokenSeparator = _ref.tokenSeparator,\n        tokenSeparator = _ref$tokenSeparator === undefined ? / +/g : _ref$tokenSeparator,\n        _ref$findAllMatches = _ref.findAllMatches,\n        findAllMatches = _ref$findAllMatches === undefined ? false : _ref$findAllMatches,\n        _ref$minMatchCharLeng = _ref.minMatchCharLength,\n        minMatchCharLength = _ref$minMatchCharLeng === undefined ? 1 : _ref$minMatchCharLeng,\n        _ref$id = _ref.id,\n        id = _ref$id === undefined ? null : _ref$id,\n        _ref$keys = _ref.keys,\n        keys = _ref$keys === undefined ? [] : _ref$keys,\n        _ref$shouldSort = _ref.shouldSort,\n        shouldSort = _ref$shouldSort === undefined ? true : _ref$shouldSort,\n        _ref$getFn = _ref.getFn,\n        getFn = _ref$getFn === undefined ? deepValue : _ref$getFn,\n        _ref$sortFn = _ref.sortFn,\n        sortFn = _ref$sortFn === undefined ? function (a, b) {\n      return a.score - b.score;\n    } : _ref$sortFn,\n        _ref$tokenize = _ref.tokenize,\n        tokenize = _ref$tokenize === undefined ? false : _ref$tokenize,\n        _ref$matchAllTokens = _ref.matchAllTokens,\n        matchAllTokens = _ref$matchAllTokens === undefined ? false : _ref$matchAllTokens,\n        _ref$includeMatches = _ref.includeMatches,\n        includeMatches = _ref$includeMatches === undefined ? false : _ref$includeMatches,\n        _ref$includeScore = _ref.includeScore,\n        includeScore = _ref$includeScore === undefined ? false : _ref$includeScore,\n        _ref$verbose = _ref.verbose,\n        verbose = _ref$verbose === undefined ? false : _ref$verbose;\n\n    _classCallCheck(this, Fuse);\n\n    this.options = {\n      location: location,\n      distance: distance,\n      threshold: threshold,\n      maxPatternLength: maxPatternLength,\n      isCaseSensitive: caseSensitive,\n      tokenSeparator: tokenSeparator,\n      findAllMatches: findAllMatches,\n      minMatchCharLength: minMatchCharLength,\n      id: id,\n      keys: keys,\n      includeMatches: includeMatches,\n      includeScore: includeScore,\n      shouldSort: shouldSort,\n      getFn: getFn,\n      sortFn: sortFn,\n      verbose: verbose,\n      tokenize: tokenize,\n      matchAllTokens: matchAllTokens\n    };\n\n    this.setCollection(list);\n  }\n\n  _createClass(Fuse, [{\n    key: 'setCollection',\n    value: function setCollection(list) {\n      this.list = list;\n      return list;\n    }\n  }, {\n    key: 'search',\n    value: function search(pattern) {\n      this._log('---------\\nSearch pattern: \"' + pattern + '\"');\n\n      var _prepareSearchers2 = this._prepareSearchers(pattern),\n          tokenSearchers = _prepareSearchers2.tokenSearchers,\n          fullSearcher = _prepareSearchers2.fullSearcher;\n\n      var _search2 = this._search(tokenSearchers, fullSearcher),\n          weights = _search2.weights,\n          results = _search2.results;\n\n      this._computeScore(weights, results);\n\n      if (this.options.shouldSort) {\n        this._sort(results);\n      }\n\n      return this._format(results);\n    }\n  }, {\n    key: '_prepareSearchers',\n    value: function _prepareSearchers() {\n      var pattern = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n      var tokenSearchers = [];\n\n      if (this.options.tokenize) {\n        // Tokenize on the separator\n        var tokens = pattern.split(this.options.tokenSeparator);\n        for (var i = 0, len = tokens.length; i < len; i += 1) {\n          tokenSearchers.push(new Bitap(tokens[i], this.options));\n        }\n      }\n\n      var fullSearcher = new Bitap(pattern, this.options);\n\n      return { tokenSearchers: tokenSearchers, fullSearcher: fullSearcher };\n    }\n  }, {\n    key: '_search',\n    value: function _search() {\n      var tokenSearchers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var fullSearcher = arguments[1];\n\n      var list = this.list;\n      var resultMap = {};\n      var results = [];\n\n      // Check the first item in the list, if it's a string, then we assume\n      // that every item in the list is also a string, and thus it's a flattened array.\n      if (typeof list[0] === 'string') {\n        // Iterate over every item\n        for (var i = 0, len = list.length; i < len; i += 1) {\n          this._analyze({\n            key: '',\n            value: list[i],\n            record: i,\n            index: i\n          }, {\n            resultMap: resultMap,\n            results: results,\n            tokenSearchers: tokenSearchers,\n            fullSearcher: fullSearcher\n          });\n        }\n\n        return { weights: null, results: results };\n      }\n\n      // Otherwise, the first item is an Object (hopefully), and thus the searching\n      // is done on the values of the keys of each item.\n      var weights = {};\n      for (var _i = 0, _len = list.length; _i < _len; _i += 1) {\n        var item = list[_i];\n        // Iterate over every key\n        for (var j = 0, keysLen = this.options.keys.length; j < keysLen; j += 1) {\n          var key = this.options.keys[j];\n          if (typeof key !== 'string') {\n            weights[key.name] = {\n              weight: 1 - key.weight || 1\n            };\n            if (key.weight <= 0 || key.weight > 1) {\n              throw new Error('Key weight has to be > 0 and <= 1');\n            }\n            key = key.name;\n          } else {\n            weights[key] = {\n              weight: 1\n            };\n          }\n\n          this._analyze({\n            key: key,\n            value: this.options.getFn(item, key),\n            record: item,\n            index: _i\n          }, {\n            resultMap: resultMap,\n            results: results,\n            tokenSearchers: tokenSearchers,\n            fullSearcher: fullSearcher\n          });\n        }\n      }\n\n      return { weights: weights, results: results };\n    }\n  }, {\n    key: '_analyze',\n    value: function _analyze(_ref2, _ref3) {\n      var key = _ref2.key,\n          _ref2$arrayIndex = _ref2.arrayIndex,\n          arrayIndex = _ref2$arrayIndex === undefined ? -1 : _ref2$arrayIndex,\n          value = _ref2.value,\n          record = _ref2.record,\n          index = _ref2.index;\n      var _ref3$tokenSearchers = _ref3.tokenSearchers,\n          tokenSearchers = _ref3$tokenSearchers === undefined ? [] : _ref3$tokenSearchers,\n          _ref3$fullSearcher = _ref3.fullSearcher,\n          fullSearcher = _ref3$fullSearcher === undefined ? [] : _ref3$fullSearcher,\n          _ref3$resultMap = _ref3.resultMap,\n          resultMap = _ref3$resultMap === undefined ? {} : _ref3$resultMap,\n          _ref3$results = _ref3.results,\n          results = _ref3$results === undefined ? [] : _ref3$results;\n\n      // Check if the texvaluet can be searched\n      if (value === undefined || value === null) {\n        return;\n      }\n\n      var exists = false;\n      var averageScore = -1;\n      var numTextMatches = 0;\n\n      if (typeof value === 'string') {\n        this._log('\\nKey: ' + (key === '' ? '-' : key));\n\n        var mainSearchResult = fullSearcher.search(value);\n        this._log('Full text: \"' + value + '\", score: ' + mainSearchResult.score);\n\n        if (this.options.tokenize) {\n          var words = value.split(this.options.tokenSeparator);\n          var scores = [];\n\n          for (var i = 0; i < tokenSearchers.length; i += 1) {\n            var tokenSearcher = tokenSearchers[i];\n\n            this._log('\\nPattern: \"' + tokenSearcher.pattern + '\"');\n\n            // let tokenScores = []\n            var hasMatchInText = false;\n\n            for (var j = 0; j < words.length; j += 1) {\n              var word = words[j];\n              var tokenSearchResult = tokenSearcher.search(word);\n              var obj = {};\n              if (tokenSearchResult.isMatch) {\n                obj[word] = tokenSearchResult.score;\n                exists = true;\n                hasMatchInText = true;\n                scores.push(tokenSearchResult.score);\n              } else {\n                obj[word] = 1;\n                if (!this.options.matchAllTokens) {\n                  scores.push(1);\n                }\n              }\n              this._log('Token: \"' + word + '\", score: ' + obj[word]);\n              // tokenScores.push(obj)\n            }\n\n            if (hasMatchInText) {\n              numTextMatches += 1;\n            }\n          }\n\n          averageScore = scores[0];\n          var scoresLen = scores.length;\n          for (var _i2 = 1; _i2 < scoresLen; _i2 += 1) {\n            averageScore += scores[_i2];\n          }\n          averageScore = averageScore / scoresLen;\n\n          this._log('Token score average:', averageScore);\n        }\n\n        var finalScore = mainSearchResult.score;\n        if (averageScore > -1) {\n          finalScore = (finalScore + averageScore) / 2;\n        }\n\n        this._log('Score average:', finalScore);\n\n        var checkTextMatches = this.options.tokenize && this.options.matchAllTokens ? numTextMatches >= tokenSearchers.length : true;\n\n        this._log('\\nCheck Matches: ' + checkTextMatches);\n\n        // If a match is found, add the item to <rawResults>, including its score\n        if ((exists || mainSearchResult.isMatch) && checkTextMatches) {\n          // Check if the item already exists in our results\n          var existingResult = resultMap[index];\n          if (existingResult) {\n            // Use the lowest score\n            // existingResult.score, bitapResult.score\n            existingResult.output.push({\n              key: key,\n              arrayIndex: arrayIndex,\n              value: value,\n              score: finalScore,\n              matchedIndices: mainSearchResult.matchedIndices\n            });\n          } else {\n            // Add it to the raw result list\n            resultMap[index] = {\n              item: record,\n              output: [{\n                key: key,\n                arrayIndex: arrayIndex,\n                value: value,\n                score: finalScore,\n                matchedIndices: mainSearchResult.matchedIndices\n              }]\n            };\n\n            results.push(resultMap[index]);\n          }\n        }\n      } else if (isArray(value)) {\n        for (var _i3 = 0, len = value.length; _i3 < len; _i3 += 1) {\n          this._analyze({\n            key: key,\n            arrayIndex: _i3,\n            value: value[_i3],\n            record: record,\n            index: index\n          }, {\n            resultMap: resultMap,\n            results: results,\n            tokenSearchers: tokenSearchers,\n            fullSearcher: fullSearcher\n          });\n        }\n      }\n    }\n  }, {\n    key: '_computeScore',\n    value: function _computeScore(weights, results) {\n      this._log('\\n\\nComputing score:\\n');\n\n      for (var i = 0, len = results.length; i < len; i += 1) {\n        var output = results[i].output;\n        var scoreLen = output.length;\n\n        var totalScore = 0;\n        var bestScore = 1;\n\n        for (var j = 0; j < scoreLen; j += 1) {\n          var weight = weights ? weights[output[j].key].weight : 1;\n          var score = weight === 1 ? output[j].score : output[j].score || 0.001;\n          var nScore = score * weight;\n\n          if (weight !== 1) {\n            bestScore = Math.min(bestScore, nScore);\n          } else {\n            output[j].nScore = nScore;\n            totalScore += nScore;\n          }\n        }\n\n        results[i].score = bestScore === 1 ? totalScore / scoreLen : bestScore;\n\n        this._log(results[i]);\n      }\n    }\n  }, {\n    key: '_sort',\n    value: function _sort(results) {\n      this._log('\\n\\nSorting....');\n      results.sort(this.options.sortFn);\n    }\n  }, {\n    key: '_format',\n    value: function _format(results) {\n      var finalOutput = [];\n\n      this._log('\\n\\nOutput:\\n\\n', JSON.stringify(results));\n\n      var transformers = [];\n\n      if (this.options.includeMatches) {\n        transformers.push(function (result, data) {\n          var output = result.output;\n          data.matches = [];\n\n          for (var i = 0, len = output.length; i < len; i += 1) {\n            var item = output[i];\n\n            if (item.matchedIndices.length === 0) {\n              continue;\n            }\n\n            var obj = {\n              indices: item.matchedIndices,\n              value: item.value\n            };\n            if (item.key) {\n              obj.key = item.key;\n            }\n            if (item.hasOwnProperty('arrayIndex') && item.arrayIndex > -1) {\n              obj.arrayIndex = item.arrayIndex;\n            }\n            data.matches.push(obj);\n          }\n        });\n      }\n\n      if (this.options.includeScore) {\n        transformers.push(function (result, data) {\n          data.score = result.score;\n        });\n      }\n\n      for (var i = 0, len = results.length; i < len; i += 1) {\n        var result = results[i];\n\n        if (this.options.id) {\n          result.item = this.options.getFn(result.item, this.options.id)[0];\n        }\n\n        if (!transformers.length) {\n          finalOutput.push(result.item);\n          continue;\n        }\n\n        var data = {\n          item: result.item\n        };\n\n        for (var j = 0, _len2 = transformers.length; j < _len2; j += 1) {\n          transformers[j](result, data);\n        }\n\n        finalOutput.push(data);\n      }\n\n      return finalOutput;\n    }\n  }, {\n    key: '_log',\n    value: function _log() {\n      if (this.options.verbose) {\n        var _console;\n\n        (_console = console).log.apply(_console, arguments);\n      }\n    }\n  }]);\n\n  return Fuse;\n}();\n\nmodule.exports = Fuse;\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=fuse.js.map","module.exports=[[\"😀\",\"grinning\"],[\"😁\",\"beaming-with-smiling-eyes\"],[\"😂\",\"face-with-tears-of-joy\"],[\"🤣\",\"rolling-on-the-floor-laughing\"],[\"😃\",\"grinning-with-big-eyes\"],[\"😄\",\"grinning-with-smiling-eyes\"],[\"😅\",\"grinning-with-sweat\"],[\"😆\",\"grinning-squinting\"],[\"😉\",\"winking\"],[\"😊\",\"smiling-with-smiling-eyes\"],[\"😋\",\"face-savoring-food\"],[\"😎\",\"smiling-with-sunglasses\"],[\"😍\",\"smiling-with-heart-eyes\"],[\"😘\",\"face-blowing-a-kiss\"],[\"😗\",\"kissing\"],[\"😙\",\"kissing-with-smiling-eyes\"],[\"😚\",\"kissing-with-closed-eyes\"],[\"☺️\",\"smiling\"],[\"🙂\",\"slightly-smiling\"],[\"🤗\",\"hugging\"],[\"🤩\",\"star-struck\"],[\"🤔\",\"thinking\"],[\"🤨\",\"face-with-raised-eyebrow\"],[\"😐\",\"neutral\"],[\"😑\",\"expressionless\"],[\"😶\",\"face-without-mouth\"],[\"🙄\",\"face-with-rolling-eyes\"],[\"😏\",\"smirking\"],[\"😣\",\"persevering\"],[\"😥\",\"sad-but-relieved\"],[\"😮\",\"face-with-open-mouth\"],[\"🤐\",\"zipper-mouth\"],[\"😯\",\"hushed\"],[\"😪\",\"sleepy\"],[\"😫\",\"tired\"],[\"😴\",\"sleeping\"],[\"😌\",\"relieved\"],[\"😛\",\"face-with-tongue\"],[\"😜\",\"winking-with-tongue\"],[\"😝\",\"squinting-with-tongue\"],[\"🤤\",\"drooling\"],[\"😒\",\"unamused\"],[\"😓\",\"downcast-with-sweat\"],[\"😔\",\"pensive\"],[\"😕\",\"confused\"],[\"🙃\",\"upside-down\"],[\"🤑\",\"money-mouth\"],[\"😲\",\"astonished\"],[\"☹️\",\"frowning\"],[\"🙁\",\"slightly-frowning\"],[\"😖\",\"confounded\"],[\"😞\",\"disappointed\"],[\"😟\",\"worried\"],[\"😤\",\"face-with-steam-from-nose\"],[\"😢\",\"crying\"],[\"😭\",\"loudly-crying\"],[\"😦\",\"frowning-with-open-mouth\"],[\"😧\",\"anguished\"],[\"😨\",\"fearful\"],[\"😩\",\"weary\"],[\"🤯\",\"exploding-head\"],[\"😬\",\"grimacing\"],[\"😰\",\"anxious-with-sweat\"],[\"😱\",\"face-screaming-in-fear\"],[\"😳\",\"flushed\"],[\"🤪\",\"crazy\"],[\"😵\",\"dizzy\"],[\"😡\",\"pouting\"],[\"😠\",\"angry\"],[\"🤬\",\"face-with-symbols-on-mouth\"],[\"😷\",\"face-with-medical-mask\"],[\"🤒\",\"face-with-thermometer\"],[\"🤕\",\"face-with-head-bandage\"],[\"🤢\",\"nauseated\"],[\"🤮\",\"face-vomiting\"],[\"🤧\",\"sneezing\"],[\"😇\",\"smiling-with-halo\"],[\"🤠\",\"cowboy-hat\"],[\"🤡\",\"clown\"],[\"🤥\",\"lying\"],[\"🤫\",\"shushing\"],[\"🤭\",\"face-with-hand-over-mouth\"],[\"🧐\",\"face-with-monocle\"],[\"🤓\",\"nerd\"],[\"😈\",\"smiling-with-horns\"],[\"👿\",\"angry-with-horns\"],[\"👹\",\"ogre\"],[\"👺\",\"goblin\"],[\"💀\",\"skull\"],[\"☠️\",\"skull-and-crossbones\"],[\"👻\",\"ghost\"],[\"👽\",\"alien\"],[\"👾\",\"alien-monster\"],[\"🤖\",\"robot\"],[\"💩\",\"pile-of-poo\"],[\"😺\",\"grinning-cat\"],[\"😸\",\"grinning-cat-with-smiling-eyes\"],[\"😹\",\"cat-with-tears-of-joy\"],[\"😻\",\"smiling-cat-with-heart-eyes\"],[\"😼\",\"cat-with-wry-smile\"],[\"😽\",\"kissing-cat\"],[\"🙀\",\"weary-cat\"],[\"😿\",\"crying-cat\"],[\"😾\",\"pouting-cat\"],[\"🙈\",\"see-no-evil-monkey\"],[\"🙉\",\"hear-no-evil-monkey\"],[\"🙊\",\"speak-no-evil-monkey\"],[\"👶\",\"baby\"],[\"👶🏻\",\"baby-light-skin\"],[\"👶🏼\",\"baby-medium-light-skin\"],[\"👶🏽\",\"baby-medium-skin\"],[\"👶🏾\",\"baby-medium-dark-skin\"],[\"👶🏿\",\"baby-dark-skin\"],[\"🧒\",\"child\"],[\"🧒🏻\",\"child-light-skin\"],[\"🧒🏼\",\"child-medium-light-skin\"],[\"🧒🏽\",\"child-medium-skin\"],[\"🧒🏾\",\"child-medium-dark-skin\"],[\"🧒🏿\",\"child-dark-skin\"],[\"👦\",\"boy\"],[\"👦🏻\",\"boy-light-skin\"],[\"👦🏼\",\"boy-medium-light-skin\"],[\"👦🏽\",\"boy-medium-skin\"],[\"👦🏾\",\"boy-medium-dark-skin\"],[\"👦🏿\",\"boy-dark-skin\"],[\"👧\",\"girl\"],[\"👧🏻\",\"girl-light-skin\"],[\"👧🏼\",\"girl-medium-light-skin\"],[\"👧🏽\",\"girl-medium-skin\"],[\"👧🏾\",\"girl-medium-dark-skin\"],[\"👧🏿\",\"girl-dark-skin\"],[\"🧑\",\"adult\"],[\"🧑🏻\",\"adult-light-skin\"],[\"🧑🏼\",\"adult-medium-light-skin\"],[\"🧑🏽\",\"adult-medium-skin\"],[\"🧑🏾\",\"adult-medium-dark-skin\"],[\"🧑🏿\",\"adult-dark-skin\"],[\"👨\",\"man\"],[\"👨🏻\",\"man-light-skin\"],[\"👨🏼\",\"man-medium-light-skin\"],[\"👨🏽\",\"man-medium-skin\"],[\"👨🏾\",\"man-medium-dark-skin\"],[\"👨🏿\",\"man-dark-skin\"],[\"👩\",\"woman\"],[\"👩🏻\",\"woman-light-skin\"],[\"👩🏼\",\"woman-medium-light-skin\"],[\"👩🏽\",\"woman-medium-skin\"],[\"👩🏾\",\"woman-medium-dark-skin\"],[\"👩🏿\",\"woman-dark-skin\"],[\"🧓\",\"older-adult\"],[\"🧓🏻\",\"older-adult-light-skin\"],[\"🧓🏼\",\"older-adult-medium-light-skin\"],[\"🧓🏽\",\"older-adult-medium-skin\"],[\"🧓🏾\",\"older-adult-medium-dark-skin\"],[\"🧓🏿\",\"older-adult-dark-skin\"],[\"👴\",\"old-man\"],[\"👴🏻\",\"old-man-light-skin\"],[\"👴🏼\",\"old-man-medium-light-skin\"],[\"👴🏽\",\"old-man-medium-skin\"],[\"👴🏾\",\"old-man-medium-dark-skin\"],[\"👴🏿\",\"old-man-dark-skin\"],[\"👵\",\"old-woman\"],[\"👵🏻\",\"old-woman-light-skin\"],[\"👵🏼\",\"old-woman-medium-light-skin\"],[\"👵🏽\",\"old-woman-medium-skin\"],[\"👵🏾\",\"old-woman-medium-dark-skin\"],[\"👵🏿\",\"old-woman-dark-skin\"],[\"👨‍⚕️\",\"man-health-worker\"],[\"👨🏻‍⚕️\",\"man-health-worker-light-skin\"],[\"👨🏼‍⚕️\",\"man-health-worker-medium-light-skin\"],[\"👨🏽‍⚕️\",\"man-health-worker-medium-skin\"],[\"👨🏾‍⚕️\",\"man-health-worker-medium-dark-skin\"],[\"👨🏿‍⚕️\",\"man-health-worker-dark-skin\"],[\"👩‍⚕️\",\"woman-health-worker\"],[\"👩🏻‍⚕️\",\"woman-health-worker-light-skin\"],[\"👩🏼‍⚕️\",\"woman-health-worker-medium-light-skin\"],[\"👩🏽‍⚕️\",\"woman-health-worker-medium-skin\"],[\"👩🏾‍⚕️\",\"woman-health-worker-medium-dark-skin\"],[\"👩🏿‍⚕️\",\"woman-health-worker-dark-skin\"],[\"👨‍🎓\",\"man-student\"],[\"👨🏻‍🎓\",\"man-student-light-skin\"],[\"👨🏼‍🎓\",\"man-student-medium-light-skin\"],[\"👨🏽‍🎓\",\"man-student-medium-skin\"],[\"👨🏾‍🎓\",\"man-student-medium-dark-skin\"],[\"👨🏿‍🎓\",\"man-student-dark-skin\"],[\"👩‍🎓\",\"woman-student\"],[\"👩🏻‍🎓\",\"woman-student-light-skin\"],[\"👩🏼‍🎓\",\"woman-student-medium-light-skin\"],[\"👩🏽‍🎓\",\"woman-student-medium-skin\"],[\"👩🏾‍🎓\",\"woman-student-medium-dark-skin\"],[\"👩🏿‍🎓\",\"woman-student-dark-skin\"],[\"👨‍🏫\",\"man-teacher\"],[\"👨🏻‍🏫\",\"man-teacher-light-skin\"],[\"👨🏼‍🏫\",\"man-teacher-medium-light-skin\"],[\"👨🏽‍🏫\",\"man-teacher-medium-skin\"],[\"👨🏾‍🏫\",\"man-teacher-medium-dark-skin\"],[\"👨🏿‍🏫\",\"man-teacher-dark-skin\"],[\"👩‍🏫\",\"woman-teacher\"],[\"👩🏻‍🏫\",\"woman-teacher-light-skin\"],[\"👩🏼‍🏫\",\"woman-teacher-medium-light-skin\"],[\"👩🏽‍🏫\",\"woman-teacher-medium-skin\"],[\"👩🏾‍🏫\",\"woman-teacher-medium-dark-skin\"],[\"👩🏿‍🏫\",\"woman-teacher-dark-skin\"],[\"👨‍⚖️\",\"man-judge\"],[\"👨🏻‍⚖️\",\"man-judge-light-skin\"],[\"👨🏼‍⚖️\",\"man-judge-medium-light-skin\"],[\"👨🏽‍⚖️\",\"man-judge-medium-skin\"],[\"👨🏾‍⚖️\",\"man-judge-medium-dark-skin\"],[\"👨🏿‍⚖️\",\"man-judge-dark-skin\"],[\"👩‍⚖️\",\"woman-judge\"],[\"👩🏻‍⚖️\",\"woman-judge-light-skin\"],[\"👩🏼‍⚖️\",\"woman-judge-medium-light-skin\"],[\"👩🏽‍⚖️\",\"woman-judge-medium-skin\"],[\"👩🏾‍⚖️\",\"woman-judge-medium-dark-skin\"],[\"👩🏿‍⚖️\",\"woman-judge-dark-skin\"],[\"👨‍🌾\",\"man-farmer\"],[\"👨🏻‍🌾\",\"man-farmer-light-skin\"],[\"👨🏼‍🌾\",\"man-farmer-medium-light-skin\"],[\"👨🏽‍🌾\",\"man-farmer-medium-skin\"],[\"👨🏾‍🌾\",\"man-farmer-medium-dark-skin\"],[\"👨🏿‍🌾\",\"man-farmer-dark-skin\"],[\"👩‍🌾\",\"woman-farmer\"],[\"👩🏻‍🌾\",\"woman-farmer-light-skin\"],[\"👩🏼‍🌾\",\"woman-farmer-medium-light-skin\"],[\"👩🏽‍🌾\",\"woman-farmer-medium-skin\"],[\"👩🏾‍🌾\",\"woman-farmer-medium-dark-skin\"],[\"👩🏿‍🌾\",\"woman-farmer-dark-skin\"],[\"👨‍🍳\",\"man-cook\"],[\"👨🏻‍🍳\",\"man-cook-light-skin\"],[\"👨🏼‍🍳\",\"man-cook-medium-light-skin\"],[\"👨🏽‍🍳\",\"man-cook-medium-skin\"],[\"👨🏾‍🍳\",\"man-cook-medium-dark-skin\"],[\"👨🏿‍🍳\",\"man-cook-dark-skin\"],[\"👩‍🍳\",\"woman-cook\"],[\"👩🏻‍🍳\",\"woman-cook-light-skin\"],[\"👩🏼‍🍳\",\"woman-cook-medium-light-skin\"],[\"👩🏽‍🍳\",\"woman-cook-medium-skin\"],[\"👩🏾‍🍳\",\"woman-cook-medium-dark-skin\"],[\"👩🏿‍🍳\",\"woman-cook-dark-skin\"],[\"👨‍🔧\",\"man-mechanic\"],[\"👨🏻‍🔧\",\"man-mechanic-light-skin\"],[\"👨🏼‍🔧\",\"man-mechanic-medium-light-skin\"],[\"👨🏽‍🔧\",\"man-mechanic-medium-skin\"],[\"👨🏾‍🔧\",\"man-mechanic-medium-dark-skin\"],[\"👨🏿‍🔧\",\"man-mechanic-dark-skin\"],[\"👩‍🔧\",\"woman-mechanic\"],[\"👩🏻‍🔧\",\"woman-mechanic-light-skin\"],[\"👩🏼‍🔧\",\"woman-mechanic-medium-light-skin\"],[\"👩🏽‍🔧\",\"woman-mechanic-medium-skin\"],[\"👩🏾‍🔧\",\"woman-mechanic-medium-dark-skin\"],[\"👩🏿‍🔧\",\"woman-mechanic-dark-skin\"],[\"👨‍🏭\",\"man-factory-worker\"],[\"👨🏻‍🏭\",\"man-factory-worker-light-skin\"],[\"👨🏼‍🏭\",\"man-factory-worker-medium-light-skin\"],[\"👨🏽‍🏭\",\"man-factory-worker-medium-skin\"],[\"👨🏾‍🏭\",\"man-factory-worker-medium-dark-skin\"],[\"👨🏿‍🏭\",\"man-factory-worker-dark-skin\"],[\"👩‍🏭\",\"woman-factory-worker\"],[\"👩🏻‍🏭\",\"woman-factory-worker-light-skin\"],[\"👩🏼‍🏭\",\"woman-factory-worker-medium-light-skin\"],[\"👩🏽‍🏭\",\"woman-factory-worker-medium-skin\"],[\"👩🏾‍🏭\",\"woman-factory-worker-medium-dark-skin\"],[\"👩🏿‍🏭\",\"woman-factory-worker-dark-skin\"],[\"👨‍💼\",\"man-office-worker\"],[\"👨🏻‍💼\",\"man-office-worker-light-skin\"],[\"👨🏼‍💼\",\"man-office-worker-medium-light-skin\"],[\"👨🏽‍💼\",\"man-office-worker-medium-skin\"],[\"👨🏾‍💼\",\"man-office-worker-medium-dark-skin\"],[\"👨🏿‍💼\",\"man-office-worker-dark-skin\"],[\"👩‍💼\",\"woman-office-worker\"],[\"👩🏻‍💼\",\"woman-office-worker-light-skin\"],[\"👩🏼‍💼\",\"woman-office-worker-medium-light-skin\"],[\"👩🏽‍💼\",\"woman-office-worker-medium-skin\"],[\"👩🏾‍💼\",\"woman-office-worker-medium-dark-skin\"],[\"👩🏿‍💼\",\"woman-office-worker-dark-skin\"],[\"👨‍🔬\",\"man-scientist\"],[\"👨🏻‍🔬\",\"man-scientist-light-skin\"],[\"👨🏼‍🔬\",\"man-scientist-medium-light-skin\"],[\"👨🏽‍🔬\",\"man-scientist-medium-skin\"],[\"👨🏾‍🔬\",\"man-scientist-medium-dark-skin\"],[\"👨🏿‍🔬\",\"man-scientist-dark-skin\"],[\"👩‍🔬\",\"woman-scientist\"],[\"👩🏻‍🔬\",\"woman-scientist-light-skin\"],[\"👩🏼‍🔬\",\"woman-scientist-medium-light-skin\"],[\"👩🏽‍🔬\",\"woman-scientist-medium-skin\"],[\"👩🏾‍🔬\",\"woman-scientist-medium-dark-skin\"],[\"👩🏿‍🔬\",\"woman-scientist-dark-skin\"],[\"👨‍💻\",\"man-technologist\"],[\"👨🏻‍💻\",\"man-technologist-light-skin\"],[\"👨🏼‍💻\",\"man-technologist-medium-light-skin\"],[\"👨🏽‍💻\",\"man-technologist-medium-skin\"],[\"👨🏾‍💻\",\"man-technologist-medium-dark-skin\"],[\"👨🏿‍💻\",\"man-technologist-dark-skin\"],[\"👩‍💻\",\"woman-technologist\"],[\"👩🏻‍💻\",\"woman-technologist-light-skin\"],[\"👩🏼‍💻\",\"woman-technologist-medium-light-skin\"],[\"👩🏽‍💻\",\"woman-technologist-medium-skin\"],[\"👩🏾‍💻\",\"woman-technologist-medium-dark-skin\"],[\"👩🏿‍💻\",\"woman-technologist-dark-skin\"],[\"👨‍🎤\",\"man-singer\"],[\"👨🏻‍🎤\",\"man-singer-light-skin\"],[\"👨🏼‍🎤\",\"man-singer-medium-light-skin\"],[\"👨🏽‍🎤\",\"man-singer-medium-skin\"],[\"👨🏾‍🎤\",\"man-singer-medium-dark-skin\"],[\"👨🏿‍🎤\",\"man-singer-dark-skin\"],[\"👩‍🎤\",\"woman-singer\"],[\"👩🏻‍🎤\",\"woman-singer-light-skin\"],[\"👩🏼‍🎤\",\"woman-singer-medium-light-skin\"],[\"👩🏽‍🎤\",\"woman-singer-medium-skin\"],[\"👩🏾‍🎤\",\"woman-singer-medium-dark-skin\"],[\"👩🏿‍🎤\",\"woman-singer-dark-skin\"],[\"👨‍🎨\",\"man-artist\"],[\"👨🏻‍🎨\",\"man-artist-light-skin\"],[\"👨🏼‍🎨\",\"man-artist-medium-light-skin\"],[\"👨🏽‍🎨\",\"man-artist-medium-skin\"],[\"👨🏾‍🎨\",\"man-artist-medium-dark-skin\"],[\"👨🏿‍🎨\",\"man-artist-dark-skin\"],[\"👩‍🎨\",\"woman-artist\"],[\"👩🏻‍🎨\",\"woman-artist-light-skin\"],[\"👩🏼‍🎨\",\"woman-artist-medium-light-skin\"],[\"👩🏽‍🎨\",\"woman-artist-medium-skin\"],[\"👩🏾‍🎨\",\"woman-artist-medium-dark-skin\"],[\"👩🏿‍🎨\",\"woman-artist-dark-skin\"],[\"👨‍✈️\",\"man-pilot\"],[\"👨🏻‍✈️\",\"man-pilot-light-skin\"],[\"👨🏼‍✈️\",\"man-pilot-medium-light-skin\"],[\"👨🏽‍✈️\",\"man-pilot-medium-skin\"],[\"👨🏾‍✈️\",\"man-pilot-medium-dark-skin\"],[\"👨🏿‍✈️\",\"man-pilot-dark-skin\"],[\"👩‍✈️\",\"woman-pilot\"],[\"👩🏻‍✈️\",\"woman-pilot-light-skin\"],[\"👩🏼‍✈️\",\"woman-pilot-medium-light-skin\"],[\"👩🏽‍✈️\",\"woman-pilot-medium-skin\"],[\"👩🏾‍✈️\",\"woman-pilot-medium-dark-skin\"],[\"👩🏿‍✈️\",\"woman-pilot-dark-skin\"],[\"👨‍🚀\",\"man-astronaut\"],[\"👨🏻‍🚀\",\"man-astronaut-light-skin\"],[\"👨🏼‍🚀\",\"man-astronaut-medium-light-skin\"],[\"👨🏽‍🚀\",\"man-astronaut-medium-skin\"],[\"👨🏾‍🚀\",\"man-astronaut-medium-dark-skin\"],[\"👨🏿‍🚀\",\"man-astronaut-dark-skin\"],[\"👩‍🚀\",\"woman-astronaut\"],[\"👩🏻‍🚀\",\"woman-astronaut-light-skin\"],[\"👩🏼‍🚀\",\"woman-astronaut-medium-light-skin\"],[\"👩🏽‍🚀\",\"woman-astronaut-medium-skin\"],[\"👩🏾‍🚀\",\"woman-astronaut-medium-dark-skin\"],[\"👩🏿‍🚀\",\"woman-astronaut-dark-skin\"],[\"👨‍🚒\",\"man-firefighter\"],[\"👨🏻‍🚒\",\"man-firefighter-light-skin\"],[\"👨🏼‍🚒\",\"man-firefighter-medium-light-skin\"],[\"👨🏽‍🚒\",\"man-firefighter-medium-skin\"],[\"👨🏾‍🚒\",\"man-firefighter-medium-dark-skin\"],[\"👨🏿‍🚒\",\"man-firefighter-dark-skin\"],[\"👩‍🚒\",\"woman-firefighter\"],[\"👩🏻‍🚒\",\"woman-firefighter-light-skin\"],[\"👩🏼‍🚒\",\"woman-firefighter-medium-light-skin\"],[\"👩🏽‍🚒\",\"woman-firefighter-medium-skin\"],[\"👩🏾‍🚒\",\"woman-firefighter-medium-dark-skin\"],[\"👩🏿‍🚒\",\"woman-firefighter-dark-skin\"],[\"👮\",\"police-officer\"],[\"👮🏻\",\"police-officer-light-skin\"],[\"👮🏼\",\"police-officer-medium-light-skin\"],[\"👮🏽\",\"police-officer-medium-skin\"],[\"👮🏾\",\"police-officer-medium-dark-skin\"],[\"👮🏿\",\"police-officer-dark-skin\"],[\"👮‍♂️\",\"man-police-officer\"],[\"👮🏻‍♂️\",\"man-police-officer-light-skin\"],[\"👮🏼‍♂️\",\"man-police-officer-medium-light-skin\"],[\"👮🏽‍♂️\",\"man-police-officer-medium-skin\"],[\"👮🏾‍♂️\",\"man-police-officer-medium-dark-skin\"],[\"👮🏿‍♂️\",\"man-police-officer-dark-skin\"],[\"👮‍♀️\",\"woman-police-officer\"],[\"👮🏻‍♀️\",\"woman-police-officer-light-skin\"],[\"👮🏼‍♀️\",\"woman-police-officer-medium-light-skin\"],[\"👮🏽‍♀️\",\"woman-police-officer-medium-skin\"],[\"👮🏾‍♀️\",\"woman-police-officer-medium-dark-skin\"],[\"👮🏿‍♀️\",\"woman-police-officer-dark-skin\"],[\"🕵️\",\"detective\"],[\"🕵🏻\",\"detective-light-skin\"],[\"🕵🏼\",\"detective-medium-light-skin\"],[\"🕵🏽\",\"detective-medium-skin\"],[\"🕵🏾\",\"detective-medium-dark-skin\"],[\"🕵🏿\",\"detective-dark-skin\"],[\"🕵️‍♂️\",\"man-detective\"],[\"🕵🏻‍♂️\",\"man-detective-light-skin\"],[\"🕵🏼‍♂️\",\"man-detective-medium-light-skin\"],[\"🕵🏽‍♂️\",\"man-detective-medium-skin\"],[\"🕵🏾‍♂️\",\"man-detective-medium-dark-skin\"],[\"🕵🏿‍♂️\",\"man-detective-dark-skin\"],[\"🕵️‍♀️\",\"woman-detective\"],[\"🕵🏻‍♀️\",\"woman-detective-light-skin\"],[\"🕵🏼‍♀️\",\"woman-detective-medium-light-skin\"],[\"🕵🏽‍♀️\",\"woman-detective-medium-skin\"],[\"🕵🏾‍♀️\",\"woman-detective-medium-dark-skin\"],[\"🕵🏿‍♀️\",\"woman-detective-dark-skin\"],[\"💂\",\"guard\"],[\"💂🏻\",\"guard-light-skin\"],[\"💂🏼\",\"guard-medium-light-skin\"],[\"💂🏽\",\"guard-medium-skin\"],[\"💂🏾\",\"guard-medium-dark-skin\"],[\"💂🏿\",\"guard-dark-skin\"],[\"💂‍♂️\",\"man-guard\"],[\"💂🏻‍♂️\",\"man-guard-light-skin\"],[\"💂🏼‍♂️\",\"man-guard-medium-light-skin\"],[\"💂🏽‍♂️\",\"man-guard-medium-skin\"],[\"💂🏾‍♂️\",\"man-guard-medium-dark-skin\"],[\"💂🏿‍♂️\",\"man-guard-dark-skin\"],[\"💂‍♀️\",\"woman-guard\"],[\"💂🏻‍♀️\",\"woman-guard-light-skin\"],[\"💂🏼‍♀️\",\"woman-guard-medium-light-skin\"],[\"💂🏽‍♀️\",\"woman-guard-medium-skin\"],[\"💂🏾‍♀️\",\"woman-guard-medium-dark-skin\"],[\"💂🏿‍♀️\",\"woman-guard-dark-skin\"],[\"👷\",\"construction-worker\"],[\"👷🏻\",\"construction-worker-light-skin\"],[\"👷🏼\",\"construction-worker-medium-light-skin\"],[\"👷🏽\",\"construction-worker-medium-skin\"],[\"👷🏾\",\"construction-worker-medium-dark-skin\"],[\"👷🏿\",\"construction-worker-dark-skin\"],[\"👷‍♂️\",\"man-construction-worker\"],[\"👷🏻‍♂️\",\"man-construction-worker-light-skin\"],[\"👷🏼‍♂️\",\"man-construction-worker-medium-light-skin\"],[\"👷🏽‍♂️\",\"man-construction-worker-medium-skin\"],[\"👷🏾‍♂️\",\"man-construction-worker-medium-dark-skin\"],[\"👷🏿‍♂️\",\"man-construction-worker-dark-skin\"],[\"👷‍♀️\",\"woman-construction-worker\"],[\"👷🏻‍♀️\",\"woman-construction-worker-light-skin\"],[\"👷🏼‍♀️\",\"woman-construction-worker-medium-light-skin\"],[\"👷🏽‍♀️\",\"woman-construction-worker-medium-skin\"],[\"👷🏾‍♀️\",\"woman-construction-worker-medium-dark-skin\"],[\"👷🏿‍♀️\",\"woman-construction-worker-dark-skin\"],[\"🤴\",\"prince\"],[\"🤴🏻\",\"prince-light-skin\"],[\"🤴🏼\",\"prince-medium-light-skin\"],[\"🤴🏽\",\"prince-medium-skin\"],[\"🤴🏾\",\"prince-medium-dark-skin\"],[\"🤴🏿\",\"prince-dark-skin\"],[\"👸\",\"princess\"],[\"👸🏻\",\"princess-light-skin\"],[\"👸🏼\",\"princess-medium-light-skin\"],[\"👸🏽\",\"princess-medium-skin\"],[\"👸🏾\",\"princess-medium-dark-skin\"],[\"👸🏿\",\"princess-dark-skin\"],[\"👳\",\"person-wearing-turban\"],[\"👳🏻\",\"person-wearing-turban-light-skin\"],[\"👳🏼\",\"person-wearing-turban-medium-light-skin\"],[\"👳🏽\",\"person-wearing-turban-medium-skin\"],[\"👳🏾\",\"person-wearing-turban-medium-dark-skin\"],[\"👳🏿\",\"person-wearing-turban-dark-skin\"],[\"👳‍♂️\",\"man-wearing-turban\"],[\"👳🏻‍♂️\",\"man-wearing-turban-light-skin\"],[\"👳🏼‍♂️\",\"man-wearing-turban-medium-light-skin\"],[\"👳🏽‍♂️\",\"man-wearing-turban-medium-skin\"],[\"👳🏾‍♂️\",\"man-wearing-turban-medium-dark-skin\"],[\"👳🏿‍♂️\",\"man-wearing-turban-dark-skin\"],[\"👳‍♀️\",\"woman-wearing-turban\"],[\"👳🏻‍♀️\",\"woman-wearing-turban-light-skin\"],[\"👳🏼‍♀️\",\"woman-wearing-turban-medium-light-skin\"],[\"👳🏽‍♀️\",\"woman-wearing-turban-medium-skin\"],[\"👳🏾‍♀️\",\"woman-wearing-turban-medium-dark-skin\"],[\"👳🏿‍♀️\",\"woman-wearing-turban-dark-skin\"],[\"👲\",\"man-with-chinese-cap\"],[\"👲🏻\",\"man-with-chinese-cap-light-skin\"],[\"👲🏼\",\"man-with-chinese-cap-medium-light-skin\"],[\"👲🏽\",\"man-with-chinese-cap-medium-skin\"],[\"👲🏾\",\"man-with-chinese-cap-medium-dark-skin\"],[\"👲🏿\",\"man-with-chinese-cap-dark-skin\"],[\"🧕\",\"woman-with-headscarf\"],[\"🧕🏻\",\"woman-with-headscarf-light-skin\"],[\"🧕🏼\",\"woman-with-headscarf-medium-light-skin\"],[\"🧕🏽\",\"woman-with-headscarf-medium-skin\"],[\"🧕🏾\",\"woman-with-headscarf-medium-dark-skin\"],[\"🧕🏿\",\"woman-with-headscarf-dark-skin\"],[\"🧔\",\"bearded-person\"],[\"🧔🏻\",\"bearded-person-light-skin\"],[\"🧔🏼\",\"bearded-person-medium-light-skin\"],[\"🧔🏽\",\"bearded-person-medium-skin\"],[\"🧔🏾\",\"bearded-person-medium-dark-skin\"],[\"🧔🏿\",\"bearded-person-dark-skin\"],[\"👱\",\"blond-haired-person\"],[\"👱🏻\",\"blond-haired-person-light-skin\"],[\"👱🏼\",\"blond-haired-person-medium-light-skin\"],[\"👱🏽\",\"blond-haired-person-medium-skin\"],[\"👱🏾\",\"blond-haired-person-medium-dark-skin\"],[\"👱🏿\",\"blond-haired-person-dark-skin\"],[\"👱‍♂️\",\"blond-haired-man\"],[\"👱🏻‍♂️\",\"blond-haired-man-light-skin\"],[\"👱🏼‍♂️\",\"blond-haired-man-medium-light-skin\"],[\"👱🏽‍♂️\",\"blond-haired-man-medium-skin\"],[\"👱🏾‍♂️\",\"blond-haired-man-medium-dark-skin\"],[\"👱🏿‍♂️\",\"blond-haired-man-dark-skin\"],[\"👱‍♀️\",\"blond-haired-woman\"],[\"👱🏻‍♀️\",\"blond-haired-woman-light-skin\"],[\"👱🏼‍♀️\",\"blond-haired-woman-medium-light-skin\"],[\"👱🏽‍♀️\",\"blond-haired-woman-medium-skin\"],[\"👱🏾‍♀️\",\"blond-haired-woman-medium-dark-skin\"],[\"👱🏿‍♀️\",\"blond-haired-woman-dark-skin\"],[\"🤵\",\"man-in-tuxedo\"],[\"🤵🏻\",\"man-in-tuxedo-light-skin\"],[\"🤵🏼\",\"man-in-tuxedo-medium-light-skin\"],[\"🤵🏽\",\"man-in-tuxedo-medium-skin\"],[\"🤵🏾\",\"man-in-tuxedo-medium-dark-skin\"],[\"🤵🏿\",\"man-in-tuxedo-dark-skin\"],[\"👰\",\"bride-with-veil\"],[\"👰🏻\",\"bride-with-veil-light-skin\"],[\"👰🏼\",\"bride-with-veil-medium-light-skin\"],[\"👰🏽\",\"bride-with-veil-medium-skin\"],[\"👰🏾\",\"bride-with-veil-medium-dark-skin\"],[\"👰🏿\",\"bride-with-veil-dark-skin\"],[\"🤰\",\"pregnant-woman\"],[\"🤰🏻\",\"pregnant-woman-light-skin\"],[\"🤰🏼\",\"pregnant-woman-medium-light-skin\"],[\"🤰🏽\",\"pregnant-woman-medium-skin\"],[\"🤰🏾\",\"pregnant-woman-medium-dark-skin\"],[\"🤰🏿\",\"pregnant-woman-dark-skin\"],[\"🤱\",\"breast-feeding\"],[\"🤱🏻\",\"breast-feeding-light-skin\"],[\"🤱🏼\",\"breast-feeding-medium-light-skin\"],[\"🤱🏽\",\"breast-feeding-medium-skin\"],[\"🤱🏾\",\"breast-feeding-medium-dark-skin\"],[\"🤱🏿\",\"breast-feeding-dark-skin\"],[\"👼\",\"baby-angel\"],[\"👼🏻\",\"baby-angel-light-skin\"],[\"👼🏼\",\"baby-angel-medium-light-skin\"],[\"👼🏽\",\"baby-angel-medium-skin\"],[\"👼🏾\",\"baby-angel-medium-dark-skin\"],[\"👼🏿\",\"baby-angel-dark-skin\"],[\"🎅\",\"santa-claus\"],[\"🎅🏻\",\"santa-claus-light-skin\"],[\"🎅🏼\",\"santa-claus-medium-light-skin\"],[\"🎅🏽\",\"santa-claus-medium-skin\"],[\"🎅🏾\",\"santa-claus-medium-dark-skin\"],[\"🎅🏿\",\"santa-claus-dark-skin\"],[\"🤶\",\"mrs-claus\"],[\"🤶🏻\",\"mrs-claus-light-skin\"],[\"🤶🏼\",\"mrs-claus-medium-light-skin\"],[\"🤶🏽\",\"mrs-claus-medium-skin\"],[\"🤶🏾\",\"mrs-claus-medium-dark-skin\"],[\"🤶🏿\",\"mrs-claus-dark-skin\"],[\"🧙\",\"mage\"],[\"🧙🏻\",\"mage-light-skin\"],[\"🧙🏼\",\"mage-medium-light-skin\"],[\"🧙🏽\",\"mage-medium-skin\"],[\"🧙🏾\",\"mage-medium-dark-skin\"],[\"🧙🏿\",\"mage-dark-skin\"],[\"🧙‍♀️\",\"woman-mage\"],[\"🧙🏻‍♀️\",\"woman-mage-light-skin\"],[\"🧙🏼‍♀️\",\"woman-mage-medium-light-skin\"],[\"🧙🏽‍♀️\",\"woman-mage-medium-skin\"],[\"🧙🏾‍♀️\",\"woman-mage-medium-dark-skin\"],[\"🧙🏿‍♀️\",\"woman-mage-dark-skin\"],[\"🧙‍♂️\",\"man-mage\"],[\"🧙🏻‍♂️\",\"man-mage-light-skin\"],[\"🧙🏼‍♂️\",\"man-mage-medium-light-skin\"],[\"🧙🏽‍♂️\",\"man-mage-medium-skin\"],[\"🧙🏾‍♂️\",\"man-mage-medium-dark-skin\"],[\"🧙🏿‍♂️\",\"man-mage-dark-skin\"],[\"🧚\",\"fairy\"],[\"🧚🏻\",\"fairy-light-skin\"],[\"🧚🏼\",\"fairy-medium-light-skin\"],[\"🧚🏽\",\"fairy-medium-skin\"],[\"🧚🏾\",\"fairy-medium-dark-skin\"],[\"🧚🏿\",\"fairy-dark-skin\"],[\"🧚‍♀️\",\"woman-fairy\"],[\"🧚🏻‍♀️\",\"woman-fairy-light-skin\"],[\"🧚🏼‍♀️\",\"woman-fairy-medium-light-skin\"],[\"🧚🏽‍♀️\",\"woman-fairy-medium-skin\"],[\"🧚🏾‍♀️\",\"woman-fairy-medium-dark-skin\"],[\"🧚🏿‍♀️\",\"woman-fairy-dark-skin\"],[\"🧚‍♂️\",\"man-fairy\"],[\"🧚🏻‍♂️\",\"man-fairy-light-skin\"],[\"🧚🏼‍♂️\",\"man-fairy-medium-light-skin\"],[\"🧚🏽‍♂️\",\"man-fairy-medium-skin\"],[\"🧚🏾‍♂️\",\"man-fairy-medium-dark-skin\"],[\"🧚🏿‍♂️\",\"man-fairy-dark-skin\"],[\"🧛\",\"vampire\"],[\"🧛🏻\",\"vampire-light-skin\"],[\"🧛🏼\",\"vampire-medium-light-skin\"],[\"🧛🏽\",\"vampire-medium-skin\"],[\"🧛🏾\",\"vampire-medium-dark-skin\"],[\"🧛🏿\",\"vampire-dark-skin\"],[\"🧛‍♀️\",\"woman-vampire\"],[\"🧛🏻‍♀️\",\"woman-vampire-light-skin\"],[\"🧛🏼‍♀️\",\"woman-vampire-medium-light-skin\"],[\"🧛🏽‍♀️\",\"woman-vampire-medium-skin\"],[\"🧛🏾‍♀️\",\"woman-vampire-medium-dark-skin\"],[\"🧛🏿‍♀️\",\"woman-vampire-dark-skin\"],[\"🧛‍♂️\",\"man-vampire\"],[\"🧛🏻‍♂️\",\"man-vampire-light-skin\"],[\"🧛🏼‍♂️\",\"man-vampire-medium-light-skin\"],[\"🧛🏽‍♂️\",\"man-vampire-medium-skin\"],[\"🧛🏾‍♂️\",\"man-vampire-medium-dark-skin\"],[\"🧛🏿‍♂️\",\"man-vampire-dark-skin\"],[\"🧜\",\"merperson\"],[\"🧜🏻\",\"merperson-light-skin\"],[\"🧜🏼\",\"merperson-medium-light-skin\"],[\"🧜🏽\",\"merperson-medium-skin\"],[\"🧜🏾\",\"merperson-medium-dark-skin\"],[\"🧜🏿\",\"merperson-dark-skin\"],[\"🧜‍♀️\",\"mermaid\"],[\"🧜🏻‍♀️\",\"mermaid-light-skin\"],[\"🧜🏼‍♀️\",\"mermaid-medium-light-skin\"],[\"🧜🏽‍♀️\",\"mermaid-medium-skin\"],[\"🧜🏾‍♀️\",\"mermaid-medium-dark-skin\"],[\"🧜🏿‍♀️\",\"mermaid-dark-skin\"],[\"🧜‍♂️\",\"merman\"],[\"🧜🏻‍♂️\",\"merman-light-skin\"],[\"🧜🏼‍♂️\",\"merman-medium-light-skin\"],[\"🧜🏽‍♂️\",\"merman-medium-skin\"],[\"🧜🏾‍♂️\",\"merman-medium-dark-skin\"],[\"🧜🏿‍♂️\",\"merman-dark-skin\"],[\"🧝\",\"elf\"],[\"🧝🏻\",\"elf-light-skin\"],[\"🧝🏼\",\"elf-medium-light-skin\"],[\"🧝🏽\",\"elf-medium-skin\"],[\"🧝🏾\",\"elf-medium-dark-skin\"],[\"🧝🏿\",\"elf-dark-skin\"],[\"🧝‍♀️\",\"woman-elf\"],[\"🧝🏻‍♀️\",\"woman-elf-light-skin\"],[\"🧝🏼‍♀️\",\"woman-elf-medium-light-skin\"],[\"🧝🏽‍♀️\",\"woman-elf-medium-skin\"],[\"🧝🏾‍♀️\",\"woman-elf-medium-dark-skin\"],[\"🧝🏿‍♀️\",\"woman-elf-dark-skin\"],[\"🧝‍♂️\",\"man-elf\"],[\"🧝🏻‍♂️\",\"man-elf-light-skin\"],[\"🧝🏼‍♂️\",\"man-elf-medium-light-skin\"],[\"🧝🏽‍♂️\",\"man-elf-medium-skin\"],[\"🧝🏾‍♂️\",\"man-elf-medium-dark-skin\"],[\"🧝🏿‍♂️\",\"man-elf-dark-skin\"],[\"🧞\",\"genie\"],[\"🧞‍♀️\",\"woman-genie\"],[\"🧞‍♂️\",\"man-genie\"],[\"🧟\",\"zombie\"],[\"🧟‍♀️\",\"woman-zombie\"],[\"🧟‍♂️\",\"man-zombie\"],[\"🙍\",\"person-frowning\"],[\"🙍🏻\",\"person-frowning-light-skin\"],[\"🙍🏼\",\"person-frowning-medium-light-skin\"],[\"🙍🏽\",\"person-frowning-medium-skin\"],[\"🙍🏾\",\"person-frowning-medium-dark-skin\"],[\"🙍🏿\",\"person-frowning-dark-skin\"],[\"🙍‍♂️\",\"man-frowning\"],[\"🙍🏻‍♂️\",\"man-frowning-light-skin\"],[\"🙍🏼‍♂️\",\"man-frowning-medium-light-skin\"],[\"🙍🏽‍♂️\",\"man-frowning-medium-skin\"],[\"🙍🏾‍♂️\",\"man-frowning-medium-dark-skin\"],[\"🙍🏿‍♂️\",\"man-frowning-dark-skin\"],[\"🙍‍♀️\",\"woman-frowning\"],[\"🙍🏻‍♀️\",\"woman-frowning-light-skin\"],[\"🙍🏼‍♀️\",\"woman-frowning-medium-light-skin\"],[\"🙍🏽‍♀️\",\"woman-frowning-medium-skin\"],[\"🙍🏾‍♀️\",\"woman-frowning-medium-dark-skin\"],[\"🙍🏿‍♀️\",\"woman-frowning-dark-skin\"],[\"🙎\",\"person-pouting\"],[\"🙎🏻\",\"person-pouting-light-skin\"],[\"🙎🏼\",\"person-pouting-medium-light-skin\"],[\"🙎🏽\",\"person-pouting-medium-skin\"],[\"🙎🏾\",\"person-pouting-medium-dark-skin\"],[\"🙎🏿\",\"person-pouting-dark-skin\"],[\"🙎‍♂️\",\"man-pouting\"],[\"🙎🏻‍♂️\",\"man-pouting-light-skin\"],[\"🙎🏼‍♂️\",\"man-pouting-medium-light-skin\"],[\"🙎🏽‍♂️\",\"man-pouting-medium-skin\"],[\"🙎🏾‍♂️\",\"man-pouting-medium-dark-skin\"],[\"🙎🏿‍♂️\",\"man-pouting-dark-skin\"],[\"🙎‍♀️\",\"woman-pouting\"],[\"🙎🏻‍♀️\",\"woman-pouting-light-skin\"],[\"🙎🏼‍♀️\",\"woman-pouting-medium-light-skin\"],[\"🙎🏽‍♀️\",\"woman-pouting-medium-skin\"],[\"🙎🏾‍♀️\",\"woman-pouting-medium-dark-skin\"],[\"🙎🏿‍♀️\",\"woman-pouting-dark-skin\"],[\"🙅\",\"person-gesturing-no\"],[\"🙅🏻\",\"person-gesturing-no-light-skin\"],[\"🙅🏼\",\"person-gesturing-no-medium-light-skin\"],[\"🙅🏽\",\"person-gesturing-no-medium-skin\"],[\"🙅🏾\",\"person-gesturing-no-medium-dark-skin\"],[\"🙅🏿\",\"person-gesturing-no-dark-skin\"],[\"🙅‍♂️\",\"man-gesturing-no\"],[\"🙅🏻‍♂️\",\"man-gesturing-no-light-skin\"],[\"🙅🏼‍♂️\",\"man-gesturing-no-medium-light-skin\"],[\"🙅🏽‍♂️\",\"man-gesturing-no-medium-skin\"],[\"🙅🏾‍♂️\",\"man-gesturing-no-medium-dark-skin\"],[\"🙅🏿‍♂️\",\"man-gesturing-no-dark-skin\"],[\"🙅‍♀️\",\"woman-gesturing-no\"],[\"🙅🏻‍♀️\",\"woman-gesturing-no-light-skin\"],[\"🙅🏼‍♀️\",\"woman-gesturing-no-medium-light-skin\"],[\"🙅🏽‍♀️\",\"woman-gesturing-no-medium-skin\"],[\"🙅🏾‍♀️\",\"woman-gesturing-no-medium-dark-skin\"],[\"🙅🏿‍♀️\",\"woman-gesturing-no-dark-skin\"],[\"🙆\",\"person-gesturing-ok\"],[\"🙆🏻\",\"person-gesturing-ok-light-skin\"],[\"🙆🏼\",\"person-gesturing-ok-medium-light-skin\"],[\"🙆🏽\",\"person-gesturing-ok-medium-skin\"],[\"🙆🏾\",\"person-gesturing-ok-medium-dark-skin\"],[\"🙆🏿\",\"person-gesturing-ok-dark-skin\"],[\"🙆‍♂️\",\"man-gesturing-ok\"],[\"🙆🏻‍♂️\",\"man-gesturing-ok-light-skin\"],[\"🙆🏼‍♂️\",\"man-gesturing-ok-medium-light-skin\"],[\"🙆🏽‍♂️\",\"man-gesturing-ok-medium-skin\"],[\"🙆🏾‍♂️\",\"man-gesturing-ok-medium-dark-skin\"],[\"🙆🏿‍♂️\",\"man-gesturing-ok-dark-skin\"],[\"🙆‍♀️\",\"woman-gesturing-ok\"],[\"🙆🏻‍♀️\",\"woman-gesturing-ok-light-skin\"],[\"🙆🏼‍♀️\",\"woman-gesturing-ok-medium-light-skin\"],[\"🙆🏽‍♀️\",\"woman-gesturing-ok-medium-skin\"],[\"🙆🏾‍♀️\",\"woman-gesturing-ok-medium-dark-skin\"],[\"🙆🏿‍♀️\",\"woman-gesturing-ok-dark-skin\"],[\"💁\",\"person-tipping-hand\"],[\"💁🏻\",\"person-tipping-hand-light-skin\"],[\"💁🏼\",\"person-tipping-hand-medium-light-skin\"],[\"💁🏽\",\"person-tipping-hand-medium-skin\"],[\"💁🏾\",\"person-tipping-hand-medium-dark-skin\"],[\"💁🏿\",\"person-tipping-hand-dark-skin\"],[\"💁‍♂️\",\"man-tipping-hand\"],[\"💁🏻‍♂️\",\"man-tipping-hand-light-skin\"],[\"💁🏼‍♂️\",\"man-tipping-hand-medium-light-skin\"],[\"💁🏽‍♂️\",\"man-tipping-hand-medium-skin\"],[\"💁🏾‍♂️\",\"man-tipping-hand-medium-dark-skin\"],[\"💁🏿‍♂️\",\"man-tipping-hand-dark-skin\"],[\"💁‍♀️\",\"woman-tipping-hand\"],[\"💁🏻‍♀️\",\"woman-tipping-hand-light-skin\"],[\"💁🏼‍♀️\",\"woman-tipping-hand-medium-light-skin\"],[\"💁🏽‍♀️\",\"woman-tipping-hand-medium-skin\"],[\"💁🏾‍♀️\",\"woman-tipping-hand-medium-dark-skin\"],[\"💁🏿‍♀️\",\"woman-tipping-hand-dark-skin\"],[\"🙋\",\"person-raising-hand\"],[\"🙋🏻\",\"person-raising-hand-light-skin\"],[\"🙋🏼\",\"person-raising-hand-medium-light-skin\"],[\"🙋🏽\",\"person-raising-hand-medium-skin\"],[\"🙋🏾\",\"person-raising-hand-medium-dark-skin\"],[\"🙋🏿\",\"person-raising-hand-dark-skin\"],[\"🙋‍♂️\",\"man-raising-hand\"],[\"🙋🏻‍♂️\",\"man-raising-hand-light-skin\"],[\"🙋🏼‍♂️\",\"man-raising-hand-medium-light-skin\"],[\"🙋🏽‍♂️\",\"man-raising-hand-medium-skin\"],[\"🙋🏾‍♂️\",\"man-raising-hand-medium-dark-skin\"],[\"🙋🏿‍♂️\",\"man-raising-hand-dark-skin\"],[\"🙋‍♀️\",\"woman-raising-hand\"],[\"🙋🏻‍♀️\",\"woman-raising-hand-light-skin\"],[\"🙋🏼‍♀️\",\"woman-raising-hand-medium-light-skin\"],[\"🙋🏽‍♀️\",\"woman-raising-hand-medium-skin\"],[\"🙋🏾‍♀️\",\"woman-raising-hand-medium-dark-skin\"],[\"🙋🏿‍♀️\",\"woman-raising-hand-dark-skin\"],[\"🙇\",\"person-bowing\"],[\"🙇🏻\",\"person-bowing-light-skin\"],[\"🙇🏼\",\"person-bowing-medium-light-skin\"],[\"🙇🏽\",\"person-bowing-medium-skin\"],[\"🙇🏾\",\"person-bowing-medium-dark-skin\"],[\"🙇🏿\",\"person-bowing-dark-skin\"],[\"🙇‍♂️\",\"man-bowing\"],[\"🙇🏻‍♂️\",\"man-bowing-light-skin\"],[\"🙇🏼‍♂️\",\"man-bowing-medium-light-skin\"],[\"🙇🏽‍♂️\",\"man-bowing-medium-skin\"],[\"🙇🏾‍♂️\",\"man-bowing-medium-dark-skin\"],[\"🙇🏿‍♂️\",\"man-bowing-dark-skin\"],[\"🙇‍♀️\",\"woman-bowing\"],[\"🙇🏻‍♀️\",\"woman-bowing-light-skin\"],[\"🙇🏼‍♀️\",\"woman-bowing-medium-light-skin\"],[\"🙇🏽‍♀️\",\"woman-bowing-medium-skin\"],[\"🙇🏾‍♀️\",\"woman-bowing-medium-dark-skin\"],[\"🙇🏿‍♀️\",\"woman-bowing-dark-skin\"],[\"🤦\",\"personpalming\"],[\"🤦🏻\",\"personpalming-light-skin\"],[\"🤦🏼\",\"personpalming-medium-light-skin\"],[\"🤦🏽\",\"personpalming-medium-skin\"],[\"🤦🏾\",\"personpalming-medium-dark-skin\"],[\"🤦🏿\",\"personpalming-dark-skin\"],[\"🤦‍♂️\",\"manpalming\"],[\"🤦🏻‍♂️\",\"manpalming-light-skin\"],[\"🤦🏼‍♂️\",\"manpalming-medium-light-skin\"],[\"🤦🏽‍♂️\",\"manpalming-medium-skin\"],[\"🤦🏾‍♂️\",\"manpalming-medium-dark-skin\"],[\"🤦🏿‍♂️\",\"manpalming-dark-skin\"],[\"🤦‍♀️\",\"womanpalming\"],[\"🤦🏻‍♀️\",\"womanpalming-light-skin\"],[\"🤦🏼‍♀️\",\"womanpalming-medium-light-skin\"],[\"🤦🏽‍♀️\",\"womanpalming-medium-skin\"],[\"🤦🏾‍♀️\",\"womanpalming-medium-dark-skin\"],[\"🤦🏿‍♀️\",\"womanpalming-dark-skin\"],[\"🤷\",\"person-shrugging\"],[\"🤷🏻\",\"person-shrugging-light-skin\"],[\"🤷🏼\",\"person-shrugging-medium-light-skin\"],[\"🤷🏽\",\"person-shrugging-medium-skin\"],[\"🤷🏾\",\"person-shrugging-medium-dark-skin\"],[\"🤷🏿\",\"person-shrugging-dark-skin\"],[\"🤷‍♂️\",\"man-shrugging\"],[\"🤷🏻‍♂️\",\"man-shrugging-light-skin\"],[\"🤷🏼‍♂️\",\"man-shrugging-medium-light-skin\"],[\"🤷🏽‍♂️\",\"man-shrugging-medium-skin\"],[\"🤷🏾‍♂️\",\"man-shrugging-medium-dark-skin\"],[\"🤷🏿‍♂️\",\"man-shrugging-dark-skin\"],[\"🤷‍♀️\",\"woman-shrugging\"],[\"🤷🏻‍♀️\",\"woman-shrugging-light-skin\"],[\"🤷🏼‍♀️\",\"woman-shrugging-medium-light-skin\"],[\"🤷🏽‍♀️\",\"woman-shrugging-medium-skin\"],[\"🤷🏾‍♀️\",\"woman-shrugging-medium-dark-skin\"],[\"🤷🏿‍♀️\",\"woman-shrugging-dark-skin\"],[\"💆\",\"person-getting-massage\"],[\"💆🏻\",\"person-getting-massage-light-skin\"],[\"💆🏼\",\"person-getting-massage-medium-light-skin\"],[\"💆🏽\",\"person-getting-massage-medium-skin\"],[\"💆🏾\",\"person-getting-massage-medium-dark-skin\"],[\"💆🏿\",\"person-getting-massage-dark-skin\"],[\"💆‍♂️\",\"man-getting-massage\"],[\"💆🏻‍♂️\",\"man-getting-massage-light-skin\"],[\"💆🏼‍♂️\",\"man-getting-massage-medium-light-skin\"],[\"💆🏽‍♂️\",\"man-getting-massage-medium-skin\"],[\"💆🏾‍♂️\",\"man-getting-massage-medium-dark-skin\"],[\"💆🏿‍♂️\",\"man-getting-massage-dark-skin\"],[\"💆‍♀️\",\"woman-getting-massage\"],[\"💆🏻‍♀️\",\"woman-getting-massage-light-skin\"],[\"💆🏼‍♀️\",\"woman-getting-massage-medium-light-skin\"],[\"💆🏽‍♀️\",\"woman-getting-massage-medium-skin\"],[\"💆🏾‍♀️\",\"woman-getting-massage-medium-dark-skin\"],[\"💆🏿‍♀️\",\"woman-getting-massage-dark-skin\"],[\"💇\",\"person-getting-haircut\"],[\"💇🏻\",\"person-getting-haircut-light-skin\"],[\"💇🏼\",\"person-getting-haircut-medium-light-skin\"],[\"💇🏽\",\"person-getting-haircut-medium-skin\"],[\"💇🏾\",\"person-getting-haircut-medium-dark-skin\"],[\"💇🏿\",\"person-getting-haircut-dark-skin\"],[\"💇‍♂️\",\"man-getting-haircut\"],[\"💇🏻‍♂️\",\"man-getting-haircut-light-skin\"],[\"💇🏼‍♂️\",\"man-getting-haircut-medium-light-skin\"],[\"💇🏽‍♂️\",\"man-getting-haircut-medium-skin\"],[\"💇🏾‍♂️\",\"man-getting-haircut-medium-dark-skin\"],[\"💇🏿‍♂️\",\"man-getting-haircut-dark-skin\"],[\"💇‍♀️\",\"woman-getting-haircut\"],[\"💇🏻‍♀️\",\"woman-getting-haircut-light-skin\"],[\"💇🏼‍♀️\",\"woman-getting-haircut-medium-light-skin\"],[\"💇🏽‍♀️\",\"woman-getting-haircut-medium-skin\"],[\"💇🏾‍♀️\",\"woman-getting-haircut-medium-dark-skin\"],[\"💇🏿‍♀️\",\"woman-getting-haircut-dark-skin\"],[\"🚶\",\"person-walking\"],[\"🚶🏻\",\"person-walking-light-skin\"],[\"🚶🏼\",\"person-walking-medium-light-skin\"],[\"🚶🏽\",\"person-walking-medium-skin\"],[\"🚶🏾\",\"person-walking-medium-dark-skin\"],[\"🚶🏿\",\"person-walking-dark-skin\"],[\"🚶‍♂️\",\"man-walking\"],[\"🚶🏻‍♂️\",\"man-walking-light-skin\"],[\"🚶🏼‍♂️\",\"man-walking-medium-light-skin\"],[\"🚶🏽‍♂️\",\"man-walking-medium-skin\"],[\"🚶🏾‍♂️\",\"man-walking-medium-dark-skin\"],[\"🚶🏿‍♂️\",\"man-walking-dark-skin\"],[\"🚶‍♀️\",\"woman-walking\"],[\"🚶🏻‍♀️\",\"woman-walking-light-skin\"],[\"🚶🏼‍♀️\",\"woman-walking-medium-light-skin\"],[\"🚶🏽‍♀️\",\"woman-walking-medium-skin\"],[\"🚶🏾‍♀️\",\"woman-walking-medium-dark-skin\"],[\"🚶🏿‍♀️\",\"woman-walking-dark-skin\"],[\"🏃\",\"person-running\"],[\"🏃🏻\",\"person-running-light-skin\"],[\"🏃🏼\",\"person-running-medium-light-skin\"],[\"🏃🏽\",\"person-running-medium-skin\"],[\"🏃🏾\",\"person-running-medium-dark-skin\"],[\"🏃🏿\",\"person-running-dark-skin\"],[\"🏃‍♂️\",\"man-running\"],[\"🏃🏻‍♂️\",\"man-running-light-skin\"],[\"🏃🏼‍♂️\",\"man-running-medium-light-skin\"],[\"🏃🏽‍♂️\",\"man-running-medium-skin\"],[\"🏃🏾‍♂️\",\"man-running-medium-dark-skin\"],[\"🏃🏿‍♂️\",\"man-running-dark-skin\"],[\"🏃‍♀️\",\"woman-running\"],[\"🏃🏻‍♀️\",\"woman-running-light-skin\"],[\"🏃🏼‍♀️\",\"woman-running-medium-light-skin\"],[\"🏃🏽‍♀️\",\"woman-running-medium-skin\"],[\"🏃🏾‍♀️\",\"woman-running-medium-dark-skin\"],[\"🏃🏿‍♀️\",\"woman-running-dark-skin\"],[\"💃\",\"woman-dancing\"],[\"💃🏻\",\"woman-dancing-light-skin\"],[\"💃🏼\",\"woman-dancing-medium-light-skin\"],[\"💃🏽\",\"woman-dancing-medium-skin\"],[\"💃🏾\",\"woman-dancing-medium-dark-skin\"],[\"💃🏿\",\"woman-dancing-dark-skin\"],[\"🕺\",\"man-dancing\"],[\"🕺🏻\",\"man-dancing-light-skin\"],[\"🕺🏼\",\"man-dancing-medium-light-skin\"],[\"🕺🏽\",\"man-dancing-medium-skin\"],[\"🕺🏾\",\"man-dancing-medium-dark-skin\"],[\"🕺🏿\",\"man-dancing-dark-skin\"],[\"👯\",\"people-with-bunny-ears\"],[\"👯‍♂️\",\"men-with-bunny-ears\"],[\"👯‍♀️\",\"women-with-bunny-ears\"],[\"🧖\",\"person-in-steamy-room\"],[\"🧖🏻\",\"person-in-steamy-room-light-skin\"],[\"🧖🏼\",\"person-in-steamy-room-medium-light-skin\"],[\"🧖🏽\",\"person-in-steamy-room-medium-skin\"],[\"🧖🏾\",\"person-in-steamy-room-medium-dark-skin\"],[\"🧖🏿\",\"person-in-steamy-room-dark-skin\"],[\"🧖‍♀️\",\"woman-in-steamy-room\"],[\"🧖🏻‍♀️\",\"woman-in-steamy-room-light-skin\"],[\"🧖🏼‍♀️\",\"woman-in-steamy-room-medium-light-skin\"],[\"🧖🏽‍♀️\",\"woman-in-steamy-room-medium-skin\"],[\"🧖🏾‍♀️\",\"woman-in-steamy-room-medium-dark-skin\"],[\"🧖🏿‍♀️\",\"woman-in-steamy-room-dark-skin\"],[\"🧖‍♂️\",\"man-in-steamy-room\"],[\"🧖🏻‍♂️\",\"man-in-steamy-room-light-skin\"],[\"🧖🏼‍♂️\",\"man-in-steamy-room-medium-light-skin\"],[\"🧖🏽‍♂️\",\"man-in-steamy-room-medium-skin\"],[\"🧖🏾‍♂️\",\"man-in-steamy-room-medium-dark-skin\"],[\"🧖🏿‍♂️\",\"man-in-steamy-room-dark-skin\"],[\"🧗\",\"person-climbing\"],[\"🧗🏻\",\"person-climbing-light-skin\"],[\"🧗🏼\",\"person-climbing-medium-light-skin\"],[\"🧗🏽\",\"person-climbing-medium-skin\"],[\"🧗🏾\",\"person-climbing-medium-dark-skin\"],[\"🧗🏿\",\"person-climbing-dark-skin\"],[\"🧗‍♀️\",\"woman-climbing\"],[\"🧗🏻‍♀️\",\"woman-climbing-light-skin\"],[\"🧗🏼‍♀️\",\"woman-climbing-medium-light-skin\"],[\"🧗🏽‍♀️\",\"woman-climbing-medium-skin\"],[\"🧗🏾‍♀️\",\"woman-climbing-medium-dark-skin\"],[\"🧗🏿‍♀️\",\"woman-climbing-dark-skin\"],[\"🧗‍♂️\",\"man-climbing\"],[\"🧗🏻‍♂️\",\"man-climbing-light-skin\"],[\"🧗🏼‍♂️\",\"man-climbing-medium-light-skin\"],[\"🧗🏽‍♂️\",\"man-climbing-medium-skin\"],[\"🧗🏾‍♂️\",\"man-climbing-medium-dark-skin\"],[\"🧗🏿‍♂️\",\"man-climbing-dark-skin\"],[\"🧘\",\"person-in-lotus-position\"],[\"🧘🏻\",\"person-in-lotus-position-light-skin\"],[\"🧘🏼\",\"person-in-lotus-position-medium-light-skin\"],[\"🧘🏽\",\"person-in-lotus-position-medium-skin\"],[\"🧘🏾\",\"person-in-lotus-position-medium-dark-skin\"],[\"🧘🏿\",\"person-in-lotus-position-dark-skin\"],[\"🧘‍♀️\",\"woman-in-lotus-position\"],[\"🧘🏻‍♀️\",\"woman-in-lotus-position-light-skin\"],[\"🧘🏼‍♀️\",\"woman-in-lotus-position-medium-light-skin\"],[\"🧘🏽‍♀️\",\"woman-in-lotus-position-medium-skin\"],[\"🧘🏾‍♀️\",\"woman-in-lotus-position-medium-dark-skin\"],[\"🧘🏿‍♀️\",\"woman-in-lotus-position-dark-skin\"],[\"🧘‍♂️\",\"man-in-lotus-position\"],[\"🧘🏻‍♂️\",\"man-in-lotus-position-light-skin\"],[\"🧘🏼‍♂️\",\"man-in-lotus-position-medium-light-skin\"],[\"🧘🏽‍♂️\",\"man-in-lotus-position-medium-skin\"],[\"🧘🏾‍♂️\",\"man-in-lotus-position-medium-dark-skin\"],[\"🧘🏿‍♂️\",\"man-in-lotus-position-dark-skin\"],[\"🛀\",\"person-taking-bath\"],[\"🛀🏻\",\"person-taking-bath-light-skin\"],[\"🛀🏼\",\"person-taking-bath-medium-light-skin\"],[\"🛀🏽\",\"person-taking-bath-medium-skin\"],[\"🛀🏾\",\"person-taking-bath-medium-dark-skin\"],[\"🛀🏿\",\"person-taking-bath-dark-skin\"],[\"🛌\",\"person-in-bed\"],[\"🛌🏻\",\"person-in-bed-light-skin\"],[\"🛌🏼\",\"person-in-bed-medium-light-skin\"],[\"🛌🏽\",\"person-in-bed-medium-skin\"],[\"🛌🏾\",\"person-in-bed-medium-dark-skin\"],[\"🛌🏿\",\"person-in-bed-dark-skin\"],[\"🕴️\",\"man-in-suit-levitating\"],[\"🕴🏻\",\"man-in-suit-levitating-light-skin\"],[\"🕴🏼\",\"man-in-suit-levitating-medium-light-skin\"],[\"🕴🏽\",\"man-in-suit-levitating-medium-skin\"],[\"🕴🏾\",\"man-in-suit-levitating-medium-dark-skin\"],[\"🕴🏿\",\"man-in-suit-levitating-dark-skin\"],[\"🗣️\",\"speaking-head\"],[\"👤\",\"bust-in-silhouette\"],[\"👥\",\"busts-in-silhouette\"],[\"🤺\",\"person-fencing\"],[\"🏇\",\"horse-racing\"],[\"🏇🏻\",\"horse-racing-light-skin\"],[\"🏇🏼\",\"horse-racing-medium-light-skin\"],[\"🏇🏽\",\"horse-racing-medium-skin\"],[\"🏇🏾\",\"horse-racing-medium-dark-skin\"],[\"🏇🏿\",\"horse-racing-dark-skin\"],[\"⛷️\",\"skier\"],[\"🏂\",\"snowboarder\"],[\"🏂🏻\",\"snowboarder-light-skin\"],[\"🏂🏼\",\"snowboarder-medium-light-skin\"],[\"🏂🏽\",\"snowboarder-medium-skin\"],[\"🏂🏾\",\"snowboarder-medium-dark-skin\"],[\"🏂🏿\",\"snowboarder-dark-skin\"],[\"🏌️\",\"person-golfing\"],[\"🏌🏻\",\"person-golfing-light-skin\"],[\"🏌🏼\",\"person-golfing-medium-light-skin\"],[\"🏌🏽\",\"person-golfing-medium-skin\"],[\"🏌🏾\",\"person-golfing-medium-dark-skin\"],[\"🏌🏿\",\"person-golfing-dark-skin\"],[\"🏌️‍♂️\",\"man-golfing\"],[\"🏌🏻‍♂️\",\"man-golfing-light-skin\"],[\"🏌🏼‍♂️\",\"man-golfing-medium-light-skin\"],[\"🏌🏽‍♂️\",\"man-golfing-medium-skin\"],[\"🏌🏾‍♂️\",\"man-golfing-medium-dark-skin\"],[\"🏌🏿‍♂️\",\"man-golfing-dark-skin\"],[\"🏌️‍♀️\",\"woman-golfing\"],[\"🏌🏻‍♀️\",\"woman-golfing-light-skin\"],[\"🏌🏼‍♀️\",\"woman-golfing-medium-light-skin\"],[\"🏌🏽‍♀️\",\"woman-golfing-medium-skin\"],[\"🏌🏾‍♀️\",\"woman-golfing-medium-dark-skin\"],[\"🏌🏿‍♀️\",\"woman-golfing-dark-skin\"],[\"🏄\",\"person-surfing\"],[\"🏄🏻\",\"person-surfing-light-skin\"],[\"🏄🏼\",\"person-surfing-medium-light-skin\"],[\"🏄🏽\",\"person-surfing-medium-skin\"],[\"🏄🏾\",\"person-surfing-medium-dark-skin\"],[\"🏄🏿\",\"person-surfing-dark-skin\"],[\"🏄‍♂️\",\"man-surfing\"],[\"🏄🏻‍♂️\",\"man-surfing-light-skin\"],[\"🏄🏼‍♂️\",\"man-surfing-medium-light-skin\"],[\"🏄🏽‍♂️\",\"man-surfing-medium-skin\"],[\"🏄🏾‍♂️\",\"man-surfing-medium-dark-skin\"],[\"🏄🏿‍♂️\",\"man-surfing-dark-skin\"],[\"🏄‍♀️\",\"woman-surfing\"],[\"🏄🏻‍♀️\",\"woman-surfing-light-skin\"],[\"🏄🏼‍♀️\",\"woman-surfing-medium-light-skin\"],[\"🏄🏽‍♀️\",\"woman-surfing-medium-skin\"],[\"🏄🏾‍♀️\",\"woman-surfing-medium-dark-skin\"],[\"🏄🏿‍♀️\",\"woman-surfing-dark-skin\"],[\"🚣\",\"person-rowing-boat\"],[\"🚣🏻\",\"person-rowing-boat-light-skin\"],[\"🚣🏼\",\"person-rowing-boat-medium-light-skin\"],[\"🚣🏽\",\"person-rowing-boat-medium-skin\"],[\"🚣🏾\",\"person-rowing-boat-medium-dark-skin\"],[\"🚣🏿\",\"person-rowing-boat-dark-skin\"],[\"🚣‍♂️\",\"man-rowing-boat\"],[\"🚣🏻‍♂️\",\"man-rowing-boat-light-skin\"],[\"🚣🏼‍♂️\",\"man-rowing-boat-medium-light-skin\"],[\"🚣🏽‍♂️\",\"man-rowing-boat-medium-skin\"],[\"🚣🏾‍♂️\",\"man-rowing-boat-medium-dark-skin\"],[\"🚣🏿‍♂️\",\"man-rowing-boat-dark-skin\"],[\"🚣‍♀️\",\"woman-rowing-boat\"],[\"🚣🏻‍♀️\",\"woman-rowing-boat-light-skin\"],[\"🚣🏼‍♀️\",\"woman-rowing-boat-medium-light-skin\"],[\"🚣🏽‍♀️\",\"woman-rowing-boat-medium-skin\"],[\"🚣🏾‍♀️\",\"woman-rowing-boat-medium-dark-skin\"],[\"🚣🏿‍♀️\",\"woman-rowing-boat-dark-skin\"],[\"🏊\",\"person-swimming\"],[\"🏊🏻\",\"person-swimming-light-skin\"],[\"🏊🏼\",\"person-swimming-medium-light-skin\"],[\"🏊🏽\",\"person-swimming-medium-skin\"],[\"🏊🏾\",\"person-swimming-medium-dark-skin\"],[\"🏊🏿\",\"person-swimming-dark-skin\"],[\"🏊‍♂️\",\"man-swimming\"],[\"🏊🏻‍♂️\",\"man-swimming-light-skin\"],[\"🏊🏼‍♂️\",\"man-swimming-medium-light-skin\"],[\"🏊🏽‍♂️\",\"man-swimming-medium-skin\"],[\"🏊🏾‍♂️\",\"man-swimming-medium-dark-skin\"],[\"🏊🏿‍♂️\",\"man-swimming-dark-skin\"],[\"🏊‍♀️\",\"woman-swimming\"],[\"🏊🏻‍♀️\",\"woman-swimming-light-skin\"],[\"🏊🏼‍♀️\",\"woman-swimming-medium-light-skin\"],[\"🏊🏽‍♀️\",\"woman-swimming-medium-skin\"],[\"🏊🏾‍♀️\",\"woman-swimming-medium-dark-skin\"],[\"🏊🏿‍♀️\",\"woman-swimming-dark-skin\"],[\"⛹️\",\"person-bouncing-ball\"],[\"⛹🏻\",\"person-bouncing-ball-light-skin\"],[\"⛹🏼\",\"person-bouncing-ball-medium-light-skin\"],[\"⛹🏽\",\"person-bouncing-ball-medium-skin\"],[\"⛹🏾\",\"person-bouncing-ball-medium-dark-skin\"],[\"⛹🏿\",\"person-bouncing-ball-dark-skin\"],[\"⛹️‍♂️\",\"man-bouncing-ball\"],[\"⛹🏻‍♂️\",\"man-bouncing-ball-light-skin\"],[\"⛹🏼‍♂️\",\"man-bouncing-ball-medium-light-skin\"],[\"⛹🏽‍♂️\",\"man-bouncing-ball-medium-skin\"],[\"⛹🏾‍♂️\",\"man-bouncing-ball-medium-dark-skin\"],[\"⛹🏿‍♂️\",\"man-bouncing-ball-dark-skin\"],[\"⛹️‍♀️\",\"woman-bouncing-ball\"],[\"⛹🏻‍♀️\",\"woman-bouncing-ball-light-skin\"],[\"⛹🏼‍♀️\",\"woman-bouncing-ball-medium-light-skin\"],[\"⛹🏽‍♀️\",\"woman-bouncing-ball-medium-skin\"],[\"⛹🏾‍♀️\",\"woman-bouncing-ball-medium-dark-skin\"],[\"⛹🏿‍♀️\",\"woman-bouncing-ball-dark-skin\"],[\"🏋️\",\"person-lifting-weights\"],[\"🏋🏻\",\"person-lifting-weights-light-skin\"],[\"🏋🏼\",\"person-lifting-weights-medium-light-skin\"],[\"🏋🏽\",\"person-lifting-weights-medium-skin\"],[\"🏋🏾\",\"person-lifting-weights-medium-dark-skin\"],[\"🏋🏿\",\"person-lifting-weights-dark-skin\"],[\"🏋️‍♂️\",\"man-lifting-weights\"],[\"🏋🏻‍♂️\",\"man-lifting-weights-light-skin\"],[\"🏋🏼‍♂️\",\"man-lifting-weights-medium-light-skin\"],[\"🏋🏽‍♂️\",\"man-lifting-weights-medium-skin\"],[\"🏋🏾‍♂️\",\"man-lifting-weights-medium-dark-skin\"],[\"🏋🏿‍♂️\",\"man-lifting-weights-dark-skin\"],[\"🏋️‍♀️\",\"woman-lifting-weights\"],[\"🏋🏻‍♀️\",\"woman-lifting-weights-light-skin\"],[\"🏋🏼‍♀️\",\"woman-lifting-weights-medium-light-skin\"],[\"🏋🏽‍♀️\",\"woman-lifting-weights-medium-skin\"],[\"🏋🏾‍♀️\",\"woman-lifting-weights-medium-dark-skin\"],[\"🏋🏿‍♀️\",\"woman-lifting-weights-dark-skin\"],[\"🚴\",\"person-biking\"],[\"🚴🏻\",\"person-biking-light-skin\"],[\"🚴🏼\",\"person-biking-medium-light-skin\"],[\"🚴🏽\",\"person-biking-medium-skin\"],[\"🚴🏾\",\"person-biking-medium-dark-skin\"],[\"🚴🏿\",\"person-biking-dark-skin\"],[\"🚴‍♂️\",\"man-biking\"],[\"🚴🏻‍♂️\",\"man-biking-light-skin\"],[\"🚴🏼‍♂️\",\"man-biking-medium-light-skin\"],[\"🚴🏽‍♂️\",\"man-biking-medium-skin\"],[\"🚴🏾‍♂️\",\"man-biking-medium-dark-skin\"],[\"🚴🏿‍♂️\",\"man-biking-dark-skin\"],[\"🚴‍♀️\",\"woman-biking\"],[\"🚴🏻‍♀️\",\"woman-biking-light-skin\"],[\"🚴🏼‍♀️\",\"woman-biking-medium-light-skin\"],[\"🚴🏽‍♀️\",\"woman-biking-medium-skin\"],[\"🚴🏾‍♀️\",\"woman-biking-medium-dark-skin\"],[\"🚴🏿‍♀️\",\"woman-biking-dark-skin\"],[\"🚵\",\"person-mountain-biking\"],[\"🚵🏻\",\"person-mountain-biking-light-skin\"],[\"🚵🏼\",\"person-mountain-biking-medium-light-skin\"],[\"🚵🏽\",\"person-mountain-biking-medium-skin\"],[\"🚵🏾\",\"person-mountain-biking-medium-dark-skin\"],[\"🚵🏿\",\"person-mountain-biking-dark-skin\"],[\"🚵‍♂️\",\"man-mountain-biking\"],[\"🚵🏻‍♂️\",\"man-mountain-biking-light-skin\"],[\"🚵🏼‍♂️\",\"man-mountain-biking-medium-light-skin\"],[\"🚵🏽‍♂️\",\"man-mountain-biking-medium-skin\"],[\"🚵🏾‍♂️\",\"man-mountain-biking-medium-dark-skin\"],[\"🚵🏿‍♂️\",\"man-mountain-biking-dark-skin\"],[\"🚵‍♀️\",\"woman-mountain-biking\"],[\"🚵🏻‍♀️\",\"woman-mountain-biking-light-skin\"],[\"🚵🏼‍♀️\",\"woman-mountain-biking-medium-light-skin\"],[\"🚵🏽‍♀️\",\"woman-mountain-biking-medium-skin\"],[\"🚵🏾‍♀️\",\"woman-mountain-biking-medium-dark-skin\"],[\"🚵🏿‍♀️\",\"woman-mountain-biking-dark-skin\"],[\"🏎️\",\"racing-car\"],[\"🏍️\",\"motorcycle\"],[\"🤸\",\"person-cartwheeling\"],[\"🤸🏻\",\"person-cartwheeling-light-skin\"],[\"🤸🏼\",\"person-cartwheeling-medium-light-skin\"],[\"🤸🏽\",\"person-cartwheeling-medium-skin\"],[\"🤸🏾\",\"person-cartwheeling-medium-dark-skin\"],[\"🤸🏿\",\"person-cartwheeling-dark-skin\"],[\"🤸‍♂️\",\"man-cartwheeling\"],[\"🤸🏻‍♂️\",\"man-cartwheeling-light-skin\"],[\"🤸🏼‍♂️\",\"man-cartwheeling-medium-light-skin\"],[\"🤸🏽‍♂️\",\"man-cartwheeling-medium-skin\"],[\"🤸🏾‍♂️\",\"man-cartwheeling-medium-dark-skin\"],[\"🤸🏿‍♂️\",\"man-cartwheeling-dark-skin\"],[\"🤸‍♀️\",\"woman-cartwheeling\"],[\"🤸🏻‍♀️\",\"woman-cartwheeling-light-skin\"],[\"🤸🏼‍♀️\",\"woman-cartwheeling-medium-light-skin\"],[\"🤸🏽‍♀️\",\"woman-cartwheeling-medium-skin\"],[\"🤸🏾‍♀️\",\"woman-cartwheeling-medium-dark-skin\"],[\"🤸🏿‍♀️\",\"woman-cartwheeling-dark-skin\"],[\"🤼\",\"people-wrestling\"],[\"🤼‍♂️\",\"men-wrestling\"],[\"🤼‍♀️\",\"women-wrestling\"],[\"🤽\",\"person-playing-water-polo\"],[\"🤽🏻\",\"person-playing-water-polo-light-skin\"],[\"🤽🏼\",\"person-playing-water-polo-medium-light-skin\"],[\"🤽🏽\",\"person-playing-water-polo-medium-skin\"],[\"🤽🏾\",\"person-playing-water-polo-medium-dark-skin\"],[\"🤽🏿\",\"person-playing-water-polo-dark-skin\"],[\"🤽‍♂️\",\"man-playing-water-polo\"],[\"🤽🏻‍♂️\",\"man-playing-water-polo-light-skin\"],[\"🤽🏼‍♂️\",\"man-playing-water-polo-medium-light-skin\"],[\"🤽🏽‍♂️\",\"man-playing-water-polo-medium-skin\"],[\"🤽🏾‍♂️\",\"man-playing-water-polo-medium-dark-skin\"],[\"🤽🏿‍♂️\",\"man-playing-water-polo-dark-skin\"],[\"🤽‍♀️\",\"woman-playing-water-polo\"],[\"🤽🏻‍♀️\",\"woman-playing-water-polo-light-skin\"],[\"🤽🏼‍♀️\",\"woman-playing-water-polo-medium-light-skin\"],[\"🤽🏽‍♀️\",\"woman-playing-water-polo-medium-skin\"],[\"🤽🏾‍♀️\",\"woman-playing-water-polo-medium-dark-skin\"],[\"🤽🏿‍♀️\",\"woman-playing-water-polo-dark-skin\"],[\"🤾\",\"person-playing-handball\"],[\"🤾🏻\",\"person-playing-handball-light-skin\"],[\"🤾🏼\",\"person-playing-handball-medium-light-skin\"],[\"🤾🏽\",\"person-playing-handball-medium-skin\"],[\"🤾🏾\",\"person-playing-handball-medium-dark-skin\"],[\"🤾🏿\",\"person-playing-handball-dark-skin\"],[\"🤾‍♂️\",\"man-playing-handball\"],[\"🤾🏻‍♂️\",\"man-playing-handball-light-skin\"],[\"🤾🏼‍♂️\",\"man-playing-handball-medium-light-skin\"],[\"🤾🏽‍♂️\",\"man-playing-handball-medium-skin\"],[\"🤾🏾‍♂️\",\"man-playing-handball-medium-dark-skin\"],[\"🤾🏿‍♂️\",\"man-playing-handball-dark-skin\"],[\"🤾‍♀️\",\"woman-playing-handball\"],[\"🤾🏻‍♀️\",\"woman-playing-handball-light-skin\"],[\"🤾🏼‍♀️\",\"woman-playing-handball-medium-light-skin\"],[\"🤾🏽‍♀️\",\"woman-playing-handball-medium-skin\"],[\"🤾🏾‍♀️\",\"woman-playing-handball-medium-dark-skin\"],[\"🤾🏿‍♀️\",\"woman-playing-handball-dark-skin\"],[\"🤹\",\"person-juggling\"],[\"🤹🏻\",\"person-juggling-light-skin\"],[\"🤹🏼\",\"person-juggling-medium-light-skin\"],[\"🤹🏽\",\"person-juggling-medium-skin\"],[\"🤹🏾\",\"person-juggling-medium-dark-skin\"],[\"🤹🏿\",\"person-juggling-dark-skin\"],[\"🤹‍♂️\",\"man-juggling\"],[\"🤹🏻‍♂️\",\"man-juggling-light-skin\"],[\"🤹🏼‍♂️\",\"man-juggling-medium-light-skin\"],[\"🤹🏽‍♂️\",\"man-juggling-medium-skin\"],[\"🤹🏾‍♂️\",\"man-juggling-medium-dark-skin\"],[\"🤹🏿‍♂️\",\"man-juggling-dark-skin\"],[\"🤹‍♀️\",\"woman-juggling\"],[\"🤹🏻‍♀️\",\"woman-juggling-light-skin\"],[\"🤹🏼‍♀️\",\"woman-juggling-medium-light-skin\"],[\"🤹🏽‍♀️\",\"woman-juggling-medium-skin\"],[\"🤹🏾‍♀️\",\"woman-juggling-medium-dark-skin\"],[\"🤹🏿‍♀️\",\"woman-juggling-dark-skin\"],[\"👫\",\"man-and-woman-holding-hands\"],[\"👬\",\"two-men-holding-hands\"],[\"👭\",\"two-women-holding-hands\"],[\"💏\",\"kiss\"],[\"👩‍❤️‍💋‍👨\",\"kiss-woman-man\"],[\"👨‍❤️‍💋‍👨\",\"kiss-man-man\"],[\"👩‍❤️‍💋‍👩\",\"kiss-woman-woman\"],[\"💑\",\"couple-with-heart\"],[\"👩‍❤️‍👨\",\"couple-with-heart-woman-man\"],[\"👨‍❤️‍👨\",\"couple-with-heart-man-man\"],[\"👩‍❤️‍👩\",\"couple-with-heart-woman-woman\"],[\"👪\",\"family\"],[\"👨‍👩‍👦\",\"family-man-woman-boy\"],[\"👨‍👩‍👧\",\"family-man-woman-girl\"],[\"👨‍👩‍👧‍👦\",\"family-man-woman-girl-boy\"],[\"👨‍👩‍👦‍👦\",\"family-man-woman-boy-boy\"],[\"👨‍👩‍👧‍👧\",\"family-man-woman-girl-girl\"],[\"👨‍👨‍👦\",\"family-man-man-boy\"],[\"👨‍👨‍👧\",\"family-man-man-girl\"],[\"👨‍👨‍👧‍👦\",\"family-man-man-girl-boy\"],[\"👨‍👨‍👦‍👦\",\"family-man-man-boy-boy\"],[\"👨‍👨‍👧‍👧\",\"family-man-man-girl-girl\"],[\"👩‍👩‍👦\",\"family-woman-woman-boy\"],[\"👩‍👩‍👧\",\"family-woman-woman-girl\"],[\"👩‍👩‍👧‍👦\",\"family-woman-woman-girl-boy\"],[\"👩‍👩‍👦‍👦\",\"family-woman-woman-boy-boy\"],[\"👩‍👩‍👧‍👧\",\"family-woman-woman-girl-girl\"],[\"👨‍👦\",\"family-man-boy\"],[\"👨‍👦‍👦\",\"family-man-boy-boy\"],[\"👨‍👧\",\"family-man-girl\"],[\"👨‍👧‍👦\",\"family-man-girl-boy\"],[\"👨‍👧‍👧\",\"family-man-girl-girl\"],[\"👩‍👦\",\"family-woman-boy\"],[\"👩‍👦‍👦\",\"family-woman-boy-boy\"],[\"👩‍👧\",\"family-woman-girl\"],[\"👩‍👧‍👦\",\"family-woman-girl-boy\"],[\"👩‍👧‍👧\",\"family-woman-girl-girl\"],[\"🤳\",\"selfie\"],[\"🤳🏻\",\"selfie-light-skin\"],[\"🤳🏼\",\"selfie-medium-light-skin\"],[\"🤳🏽\",\"selfie-medium-skin\"],[\"🤳🏾\",\"selfie-medium-dark-skin\"],[\"🤳🏿\",\"selfie-dark-skin\"],[\"💪\",\"flexed-biceps\"],[\"💪🏻\",\"flexed-biceps-light-skin\"],[\"💪🏼\",\"flexed-biceps-medium-light-skin\"],[\"💪🏽\",\"flexed-biceps-medium-skin\"],[\"💪🏾\",\"flexed-biceps-medium-dark-skin\"],[\"💪🏿\",\"flexed-biceps-dark-skin\"],[\"👈\",\"backhand-index-pointing-left\"],[\"👈🏻\",\"backhand-index-pointing-left-light-skin\"],[\"👈🏼\",\"backhand-index-pointing-left-medium-light-skin\"],[\"👈🏽\",\"backhand-index-pointing-left-medium-skin\"],[\"👈🏾\",\"backhand-index-pointing-left-medium-dark-skin\"],[\"👈🏿\",\"backhand-index-pointing-left-dark-skin\"],[\"👉\",\"backhand-index-pointing-right\"],[\"👉🏻\",\"backhand-index-pointing-right-light-skin\"],[\"👉🏼\",\"backhand-index-pointing-right-medium-light-skin\"],[\"👉🏽\",\"backhand-index-pointing-right-medium-skin\"],[\"👉🏾\",\"backhand-index-pointing-right-medium-dark-skin\"],[\"👉🏿\",\"backhand-index-pointing-right-dark-skin\"],[\"☝️\",\"index-pointing-up\"],[\"☝🏻\",\"index-pointing-up-light-skin\"],[\"☝🏼\",\"index-pointing-up-medium-light-skin\"],[\"☝🏽\",\"index-pointing-up-medium-skin\"],[\"☝🏾\",\"index-pointing-up-medium-dark-skin\"],[\"☝🏿\",\"index-pointing-up-dark-skin\"],[\"👆\",\"backhand-index-pointing-up\"],[\"👆🏻\",\"backhand-index-pointing-up-light-skin\"],[\"👆🏼\",\"backhand-index-pointing-up-medium-light-skin\"],[\"👆🏽\",\"backhand-index-pointing-up-medium-skin\"],[\"👆🏾\",\"backhand-index-pointing-up-medium-dark-skin\"],[\"👆🏿\",\"backhand-index-pointing-up-dark-skin\"],[\"🖕\",\"middle-finger\"],[\"🖕🏻\",\"middle-finger-light-skin\"],[\"🖕🏼\",\"middle-finger-medium-light-skin\"],[\"🖕🏽\",\"middle-finger-medium-skin\"],[\"🖕🏾\",\"middle-finger-medium-dark-skin\"],[\"🖕🏿\",\"middle-finger-dark-skin\"],[\"👇\",\"backhand-index-pointing-down\"],[\"👇🏻\",\"backhand-index-pointing-down-light-skin\"],[\"👇🏼\",\"backhand-index-pointing-down-medium-light-skin\"],[\"👇🏽\",\"backhand-index-pointing-down-medium-skin\"],[\"👇🏾\",\"backhand-index-pointing-down-medium-dark-skin\"],[\"👇🏿\",\"backhand-index-pointing-down-dark-skin\"],[\"✌️\",\"victory-hand\"],[\"✌🏻\",\"victory-hand-light-skin\"],[\"✌🏼\",\"victory-hand-medium-light-skin\"],[\"✌🏽\",\"victory-hand-medium-skin\"],[\"✌🏾\",\"victory-hand-medium-dark-skin\"],[\"✌🏿\",\"victory-hand-dark-skin\"],[\"🤞\",\"crossed-fingers\"],[\"🤞🏻\",\"crossed-fingers-light-skin\"],[\"🤞🏼\",\"crossed-fingers-medium-light-skin\"],[\"🤞🏽\",\"crossed-fingers-medium-skin\"],[\"🤞🏾\",\"crossed-fingers-medium-dark-skin\"],[\"🤞🏿\",\"crossed-fingers-dark-skin\"],[\"🖖\",\"vulcan-salute\"],[\"🖖🏻\",\"vulcan-salute-light-skin\"],[\"🖖🏼\",\"vulcan-salute-medium-light-skin\"],[\"🖖🏽\",\"vulcan-salute-medium-skin\"],[\"🖖🏾\",\"vulcan-salute-medium-dark-skin\"],[\"🖖🏿\",\"vulcan-salute-dark-skin\"],[\"🤘\",\"sign-of-the-horns\"],[\"🤘🏻\",\"sign-of-the-horns-light-skin\"],[\"🤘🏼\",\"sign-of-the-horns-medium-light-skin\"],[\"🤘🏽\",\"sign-of-the-horns-medium-skin\"],[\"🤘🏾\",\"sign-of-the-horns-medium-dark-skin\"],[\"🤘🏿\",\"sign-of-the-horns-dark-skin\"],[\"🤙\",\"call-me-hand\"],[\"🤙🏻\",\"call-me-hand-light-skin\"],[\"🤙🏼\",\"call-me-hand-medium-light-skin\"],[\"🤙🏽\",\"call-me-hand-medium-skin\"],[\"🤙🏾\",\"call-me-hand-medium-dark-skin\"],[\"🤙🏿\",\"call-me-hand-dark-skin\"],[\"🖐️\",\"hand-with-fingers-splayed\"],[\"🖐🏻\",\"hand-with-fingers-splayed-light-skin\"],[\"🖐🏼\",\"hand-with-fingers-splayed-medium-light-skin\"],[\"🖐🏽\",\"hand-with-fingers-splayed-medium-skin\"],[\"🖐🏾\",\"hand-with-fingers-splayed-medium-dark-skin\"],[\"🖐🏿\",\"hand-with-fingers-splayed-dark-skin\"],[\"✋\",\"raised-hand\"],[\"✋🏻\",\"raised-hand-light-skin\"],[\"✋🏼\",\"raised-hand-medium-light-skin\"],[\"✋🏽\",\"raised-hand-medium-skin\"],[\"✋🏾\",\"raised-hand-medium-dark-skin\"],[\"✋🏿\",\"raised-hand-dark-skin\"],[\"👌\",\"ok-hand\"],[\"👌🏻\",\"ok-hand-light-skin\"],[\"👌🏼\",\"ok-hand-medium-light-skin\"],[\"👌🏽\",\"ok-hand-medium-skin\"],[\"👌🏾\",\"ok-hand-medium-dark-skin\"],[\"👌🏿\",\"ok-hand-dark-skin\"],[\"👍\",\"thumbs-up\"],[\"👍🏻\",\"thumbs-up-light-skin\"],[\"👍🏼\",\"thumbs-up-medium-light-skin\"],[\"👍🏽\",\"thumbs-up-medium-skin\"],[\"👍🏾\",\"thumbs-up-medium-dark-skin\"],[\"👍🏿\",\"thumbs-up-dark-skin\"],[\"👎\",\"thumbs-down\"],[\"👎🏻\",\"thumbs-down-light-skin\"],[\"👎🏼\",\"thumbs-down-medium-light-skin\"],[\"👎🏽\",\"thumbs-down-medium-skin\"],[\"👎🏾\",\"thumbs-down-medium-dark-skin\"],[\"👎🏿\",\"thumbs-down-dark-skin\"],[\"✊\",\"raised-fist\"],[\"✊🏻\",\"raised-fist-light-skin\"],[\"✊🏼\",\"raised-fist-medium-light-skin\"],[\"✊🏽\",\"raised-fist-medium-skin\"],[\"✊🏾\",\"raised-fist-medium-dark-skin\"],[\"✊🏿\",\"raised-fist-dark-skin\"],[\"👊\",\"oncoming-fist\"],[\"👊🏻\",\"oncoming-fist-light-skin\"],[\"👊🏼\",\"oncoming-fist-medium-light-skin\"],[\"👊🏽\",\"oncoming-fist-medium-skin\"],[\"👊🏾\",\"oncoming-fist-medium-dark-skin\"],[\"👊🏿\",\"oncoming-fist-dark-skin\"],[\"🤛\",\"left-facing-fist\"],[\"🤛🏻\",\"left-facing-fist-light-skin\"],[\"🤛🏼\",\"left-facing-fist-medium-light-skin\"],[\"🤛🏽\",\"left-facing-fist-medium-skin\"],[\"🤛🏾\",\"left-facing-fist-medium-dark-skin\"],[\"🤛🏿\",\"left-facing-fist-dark-skin\"],[\"🤜\",\"right-facing-fist\"],[\"🤜🏻\",\"right-facing-fist-light-skin\"],[\"🤜🏼\",\"right-facing-fist-medium-light-skin\"],[\"🤜🏽\",\"right-facing-fist-medium-skin\"],[\"🤜🏾\",\"right-facing-fist-medium-dark-skin\"],[\"🤜🏿\",\"right-facing-fist-dark-skin\"],[\"🤚\",\"raised-back-of-hand\"],[\"🤚🏻\",\"raised-back-of-hand-light-skin\"],[\"🤚🏼\",\"raised-back-of-hand-medium-light-skin\"],[\"🤚🏽\",\"raised-back-of-hand-medium-skin\"],[\"🤚🏾\",\"raised-back-of-hand-medium-dark-skin\"],[\"🤚🏿\",\"raised-back-of-hand-dark-skin\"],[\"👋\",\"waving-hand\"],[\"👋🏻\",\"waving-hand-light-skin\"],[\"👋🏼\",\"waving-hand-medium-light-skin\"],[\"👋🏽\",\"waving-hand-medium-skin\"],[\"👋🏾\",\"waving-hand-medium-dark-skin\"],[\"👋🏿\",\"waving-hand-dark-skin\"],[\"🤟\",\"love-you-gesture\"],[\"🤟🏻\",\"love-you-gesture-light-skin\"],[\"🤟🏼\",\"love-you-gesture-medium-light-skin\"],[\"🤟🏽\",\"love-you-gesture-medium-skin\"],[\"🤟🏾\",\"love-you-gesture-medium-dark-skin\"],[\"🤟🏿\",\"love-you-gesture-dark-skin\"],[\"✍️\",\"writing-hand\"],[\"✍🏻\",\"writing-hand-light-skin\"],[\"✍🏼\",\"writing-hand-medium-light-skin\"],[\"✍🏽\",\"writing-hand-medium-skin\"],[\"✍🏾\",\"writing-hand-medium-dark-skin\"],[\"✍🏿\",\"writing-hand-dark-skin\"],[\"👏\",\"clapping-hands\"],[\"👏🏻\",\"clapping-hands-light-skin\"],[\"👏🏼\",\"clapping-hands-medium-light-skin\"],[\"👏🏽\",\"clapping-hands-medium-skin\"],[\"👏🏾\",\"clapping-hands-medium-dark-skin\"],[\"👏🏿\",\"clapping-hands-dark-skin\"],[\"👐\",\"open-hands\"],[\"👐🏻\",\"open-hands-light-skin\"],[\"👐🏼\",\"open-hands-medium-light-skin\"],[\"👐🏽\",\"open-hands-medium-skin\"],[\"👐🏾\",\"open-hands-medium-dark-skin\"],[\"👐🏿\",\"open-hands-dark-skin\"],[\"🙌\",\"raising-hands\"],[\"🙌🏻\",\"raising-hands-light-skin\"],[\"🙌🏼\",\"raising-hands-medium-light-skin\"],[\"🙌🏽\",\"raising-hands-medium-skin\"],[\"🙌🏾\",\"raising-hands-medium-dark-skin\"],[\"🙌🏿\",\"raising-hands-dark-skin\"],[\"🤲\",\"palms-up-together\"],[\"🤲🏻\",\"palms-up-together-light-skin\"],[\"🤲🏼\",\"palms-up-together-medium-light-skin\"],[\"🤲🏽\",\"palms-up-together-medium-skin\"],[\"🤲🏾\",\"palms-up-together-medium-dark-skin\"],[\"🤲🏿\",\"palms-up-together-dark-skin\"],[\"🙏\",\"folded-hands\",[\"praying\"]],[\"🙏🏻\",\"folded-hands-light-skin\",[\"praying\"]],[\"🙏🏼\",\"folded-hands-medium-light-skin\",[\"praying\"]],[\"🙏🏽\",\"folded-hands-medium-skin\",[\"praying\"]],[\"🙏🏾\",\"folded-hands-medium-dark-skin\",[\"praying\"]],[\"🙏🏿\",\"folded-hands-dark-skin\",[\"praying\"]],[\"🤝\",\"handshake\"],[\"💅\",\"nail-polish\"],[\"💅🏻\",\"nail-polish-light-skin\"],[\"💅🏼\",\"nail-polish-medium-light-skin\"],[\"💅🏽\",\"nail-polish-medium-skin\"],[\"💅🏾\",\"nail-polish-medium-dark-skin\"],[\"💅🏿\",\"nail-polish-dark-skin\"],[\"👂\",\"ear\"],[\"👂🏻\",\"ear-light-skin\"],[\"👂🏼\",\"ear-medium-light-skin\"],[\"👂🏽\",\"ear-medium-skin\"],[\"👂🏾\",\"ear-medium-dark-skin\"],[\"👂🏿\",\"ear-dark-skin\"],[\"👃\",\"nose\"],[\"👃🏻\",\"nose-light-skin\"],[\"👃🏼\",\"nose-medium-light-skin\"],[\"👃🏽\",\"nose-medium-skin\"],[\"👃🏾\",\"nose-medium-dark-skin\"],[\"👃🏿\",\"nose-dark-skin\"],[\"👣\",\"footprints\"],[\"👀\",\"eyes\"],[\"👁️\",\"eye\"],[\"👁️‍🗨️\",\"eye-in-speech-bubble\"],[\"🧠\",\"brain\"],[\"👅\",\"tongue\"],[\"👄\",\"mouth\"],[\"💋\",\"kiss-mark\"],[\"💘\",\"heart-with-arrow\"],[\"❤️\",\"red-heart\"],[\"💓\",\"beating-heart\"],[\"💔\",\"broken-heart\"],[\"💕\",\"two-hearts\"],[\"💖\",\"sparkling-heart\"],[\"💗\",\"growing-heart\"],[\"💙\",\"blue-heart\"],[\"💚\",\"green-heart\"],[\"💛\",\"yellow-heart\"],[\"🧡\",\"orange-heart\"],[\"💜\",\"purple-heart\"],[\"🖤\",\"black-heart\"],[\"💝\",\"heart-with-ribbon\"],[\"💞\",\"revolving-hearts\"],[\"💟\",\"heart-decoration\"],[\"❣️\",\"heavy-heart-exclamation\"],[\"💌\",\"love-letter\"],[\"💤\",\"zzz\"],[\"💢\",\"anger-symbol\"],[\"💣\",\"bomb\"],[\"💥\",\"collision\",[\"boom\",\"bang\",\"explosion\"]],[\"💦\",\"sweat-droplets\"],[\"💨\",\"dashing-away\"],[\"💫\",\"dizzy\"],[\"💬\",\"speech-balloon\"],[\"🗨️\",\"left-speech-bubble\"],[\"🗯️\",\"right-anger-bubble\"],[\"💭\",\"thought-balloon\"],[\"🕳️\",\"hole\"],[\"👓\",\"glasses\"],[\"🕶️\",\"sunglasses\"],[\"👔\",\"necktie\"],[\"👕\",\"t-shirt\"],[\"👖\",\"jeans\"],[\"🧣\",\"scarf\"],[\"🧤\",\"gloves\"],[\"🧥\",\"coat\"],[\"🧦\",\"socks\"],[\"👗\",\"dress\"],[\"👘\",\"kimono\"],[\"👙\",\"bikini\"],[\"👚\",\"woman-s-clothes\"],[\"👛\",\"purse\"],[\"👜\",\"handbag\"],[\"👝\",\"clutch-bag\"],[\"🛍️\",\"shopping-bags\"],[\"🎒\",\"school-backpack\"],[\"👞\",\"man-s-shoe\"],[\"👟\",\"running-shoe\"],[\"👠\",\"high-heeled-shoe\"],[\"👡\",\"woman-s-sandal\"],[\"👢\",\"woman-s-boot\"],[\"👑\",\"crown\"],[\"👒\",\"woman-s-hat\"],[\"🎩\",\"top-hat\"],[\"🎓\",\"graduation-cap\"],[\"🧢\",\"billed-cap\"],[\"⛑️\",\"rescue-worker-s-helmet\"],[\"📿\",\"prayer-beads\"],[\"💄\",\"lipstick\"],[\"💍\",\"ring\"],[\"💎\",\"gem-stone\"],[\"🐵\",\"monkey\"],[\"🐒\",\"monkey\"],[\"🦍\",\"gorilla\"],[\"🐶\",\"dog\"],[\"🐕\",\"dog\"],[\"🐩\",\"poodle\"],[\"🐺\",\"wolf\"],[\"🦊\",\"fox\"],[\"🐱\",\"cat\"],[\"🐈\",\"cat\"],[\"🦁\",\"lion\"],[\"🐯\",\"tiger\"],[\"🐅\",\"tiger\"],[\"🐆\",\"leopard\"],[\"🐴\",\"horse\"],[\"🐎\",\"horse\"],[\"🦄\",\"unicorn\"],[\"🦓\",\"zebra\"],[\"🦌\",\"deer\"],[\"🐮\",\"cow\"],[\"🐂\",\"ox\"],[\"🐃\",\"water-buffalo\"],[\"🐄\",\"cow\"],[\"🐷\",\"pig\"],[\"🐖\",\"pig\"],[\"🐗\",\"boar\"],[\"🐽\",\"pig-nose\"],[\"🐏\",\"ram\"],[\"🐑\",\"ewe\"],[\"🐐\",\"goat\"],[\"🐪\",\"camel\"],[\"🐫\",\"two-hump-camel\"],[\"🦒\",\"giraffe\"],[\"🐘\",\"elephant\"],[\"🦏\",\"rhinoceros\"],[\"🐭\",\"mouse\"],[\"🐁\",\"mouse\"],[\"🐀\",\"rat\"],[\"🐹\",\"hamster\"],[\"🐰\",\"rabbit\"],[\"🐇\",\"rabbit\"],[\"🐿️\",\"chipmunk\"],[\"🦔\",\"hedgehog\"],[\"🦇\",\"bat\"],[\"🐻\",\"bear\"],[\"🐨\",\"koala\"],[\"🐼\",\"panda\"],[\"🐾\",\"paw-prints\"],[\"🦃\",\"turkey\"],[\"🐔\",\"chicken\"],[\"🐓\",\"rooster\"],[\"🐣\",\"hatching-chick\"],[\"🐤\",\"baby-chick\"],[\"🐥\",\"front-facing-baby-chick\"],[\"🐦\",\"bird\"],[\"🐧\",\"penguin\"],[\"🕊️\",\"dove\"],[\"🦅\",\"eagle\"],[\"🦆\",\"duck\"],[\"🦉\",\"owl\"],[\"🐸\",\"frog\"],[\"🐊\",\"crocodile\"],[\"🐢\",\"turtle\"],[\"🦎\",\"lizard\"],[\"🐍\",\"snake\"],[\"🐲\",\"dragon\"],[\"🐉\",\"dragon\"],[\"🦕\",\"sauropod\"],[\"🦖\",\"t-rex\"],[\"🐳\",\"spouting-whale\"],[\"🐋\",\"whale\"],[\"🐬\",\"dolphin\"],[\"🐟\",\"fish\"],[\"🐠\",\"tropical-fish\"],[\"🐡\",\"blowfish\"],[\"🦈\",\"shark\"],[\"🐙\",\"octopus\"],[\"🐚\",\"spiral-shell\"],[\"🦀\",\"crab\"],[\"🦐\",\"shrimp\"],[\"🦑\",\"squid\"],[\"🐌\",\"snail\"],[\"🦋\",\"butterfly\"],[\"🐛\",\"bug\"],[\"🐜\",\"ant\"],[\"🐝\",\"honeybee\"],[\"🐞\",\"lady-beetle\"],[\"🦗\",\"cricket\"],[\"🕷️\",\"spider\"],[\"🕸️\",\"spider-web\"],[\"🦂\",\"scorpion\"],[\"💐\",\"bouquet\"],[\"🌸\",\"cherry-blossom\"],[\"💮\",\"white-flower\"],[\"🏵️\",\"rosette\"],[\"🌹\",\"rose\"],[\"🥀\",\"wilted-flower\"],[\"🌺\",\"hibiscus\"],[\"🌻\",\"sunflower\"],[\"🌼\",\"blossom\"],[\"🌷\",\"tulip\"],[\"🌱\",\"seedling\"],[\"🌲\",\"evergreen-tree\"],[\"🌳\",\"deciduous-tree\"],[\"🌴\",\"palm-tree\"],[\"🌵\",\"cactus\"],[\"🌾\",\"sheaf-of-rice\"],[\"🌿\",\"herb\"],[\"☘️\",\"shamrock\"],[\"🍀\",\"four-leaf-clover\"],[\"🍁\",\"maple-leaf\"],[\"🍂\",\"fallen-leaf\"],[\"🍃\",\"leaf-fluttering-in-wind\"],[\"🍇\",\"grapes\"],[\"🍈\",\"melon\"],[\"🍉\",\"watermelon\"],[\"🍊\",\"tangerine\"],[\"🍋\",\"lemon\"],[\"🍌\",\"banana\"],[\"🍍\",\"pineapple\"],[\"🍎\",\"red-apple\"],[\"🍏\",\"green-apple\"],[\"🍐\",\"pear\"],[\"🍑\",\"peach\"],[\"🍒\",\"cherries\"],[\"🍓\",\"strawberry\"],[\"🥝\",\"kiwi-fruit\"],[\"🍅\",\"tomato\"],[\"🥥\",\"coconut\"],[\"🥑\",\"avocado\"],[\"🍆\",\"eggplant\"],[\"🥔\",\"potato\"],[\"🥕\",\"carrot\"],[\"🌽\",\"ear-of-corn\"],[\"🌶️\",\"hot-pepper\"],[\"🥒\",\"cucumber\"],[\"🥦\",\"broccoli\"],[\"🍄\",\"mushroom\"],[\"🥜\",\"peanuts\"],[\"🌰\",\"chestnut\"],[\"🍞\",\"bread\"],[\"🥐\",\"croissant\"],[\"🥖\",\"baguette-bread\"],[\"🥨\",\"pretzel\"],[\"🥞\",\"pancakes\"],[\"🧀\",\"cheese-wedge\"],[\"🍖\",\"meat-on-bone\"],[\"🍗\",\"poultry-leg\"],[\"🥩\",\"cut-of-meat\"],[\"🥓\",\"bacon\"],[\"🍔\",\"hamburger\"],[\"🍟\",\"french-fries\"],[\"🍕\",\"pizza\"],[\"🌭\",\"hot-dog\"],[\"🥪\",\"sandwich\"],[\"🌮\",\"taco\"],[\"🌯\",\"burrito\"],[\"🥙\",\"stuffed-flatbread\"],[\"🥚\",\"egg\"],[\"🍳\",\"cooking\"],[\"🥘\",\"shallow-pan-of-food\"],[\"🍲\",\"pot-of-food\"],[\"🥣\",\"bowl-with-spoon\"],[\"🥗\",\"green-salad\"],[\"🍿\",\"popcorn\"],[\"🥫\",\"canned-food\"],[\"🍱\",\"bento-box\"],[\"🍘\",\"rice-cracker\"],[\"🍙\",\"rice-ball\"],[\"🍚\",\"cooked-rice\"],[\"🍛\",\"curry-rice\"],[\"🍜\",\"steaming-bowl\"],[\"🍝\",\"spaghetti\"],[\"🍠\",\"roasted-sweet-potato\"],[\"🍢\",\"oden\"],[\"🍣\",\"sushi\"],[\"🍤\",\"fried-shrimp\"],[\"🍥\",\"fish-cake-with-swirl\"],[\"🍡\",\"dango\"],[\"🥟\",\"dumpling\"],[\"🥠\",\"fortune-cookie\"],[\"🥡\",\"takeout-box\"],[\"🍦\",\"soft-ice-cream\"],[\"🍧\",\"shaved-ice\"],[\"🍨\",\"ice-cream\"],[\"🍩\",\"doughnut\"],[\"🍪\",\"cookie\"],[\"🎂\",\"birthday-cake\"],[\"🍰\",\"shortcake\"],[\"🥧\",\"pie\"],[\"🍫\",\"chocolate-bar\"],[\"🍬\",\"candy\"],[\"🍭\",\"lollipop\"],[\"🍮\",\"custard\"],[\"🍯\",\"honey-pot\"],[\"🍼\",\"baby-bottle\"],[\"🥛\",\"glass-of-milk\"],[\"☕\",\"hot-beverage\"],[\"🍵\",\"teacup-without-handle\"],[\"🍶\",\"sake\"],[\"🍾\",\"bottle-with-popping-cork\"],[\"🍷\",\"wine-glass\"],[\"🍸\",\"cocktail-glass\"],[\"🍹\",\"tropical-drink\"],[\"🍺\",\"beer-mug\"],[\"🍻\",\"clinking-beer-mugs\"],[\"🥂\",\"clinking-glasses\"],[\"🥃\",\"tumbler-glass\"],[\"🥤\",\"cup-with-straw\"],[\"🥢\",\"chopsticks\"],[\"🍽️\",\"fork-and-knife-with-plate\"],[\"🍴\",\"fork-and-knife\"],[\"🥄\",\"spoon\"],[\"🔪\",\"kitchen-knife\"],[\"🏺\",\"amphora\"],[\"🌍\",\"globe-showing-europe-africa\"],[\"🌎\",\"globe-showing-americas\"],[\"🌏\",\"globe-showing-asia-australia\"],[\"🌐\",\"globe-with-meridians\"],[\"🗺️\",\"world-map\"],[\"🗾\",\"map-of-japan\"],[\"🏔️\",\"snow-capped-mountain\"],[\"⛰️\",\"mountain\"],[\"🌋\",\"volcano\"],[\"🗻\",\"mount-fuji\"],[\"🏕️\",\"camping\"],[\"🏖️\",\"beach-with-umbrella\"],[\"🏜️\",\"desert\"],[\"🏝️\",\"desert-island\"],[\"🏞️\",\"national-park\"],[\"🏟️\",\"stadium\"],[\"🏛️\",\"classical-building\"],[\"🏗️\",\"building-construction\"],[\"🏘️\",\"houses\"],[\"🏙️\",\"cityscape\"],[\"🏚️\",\"derelict-house\"],[\"🏠\",\"house\"],[\"🏡\",\"house-with-garden\"],[\"🏢\",\"office-building\"],[\"🏣\",\"japanese-post-office\"],[\"🏤\",\"post-office\"],[\"🏥\",\"hospital\"],[\"🏦\",\"bank\"],[\"🏨\",\"hotel\"],[\"🏩\",\"love-hotel\"],[\"🏪\",\"convenience-store\"],[\"🏫\",\"school\"],[\"🏬\",\"department-store\"],[\"🏭\",\"factory\"],[\"🏯\",\"japanese-castle\"],[\"🏰\",\"castle\"],[\"💒\",\"wedding\"],[\"🗼\",\"tokyo-tower\"],[\"🗽\",\"statue-of-liberty\"],[\"⛪\",\"church\"],[\"🕌\",\"mosque\"],[\"🕍\",\"synagogue\"],[\"⛩️\",\"shinto-shrine\"],[\"🕋\",\"kaaba\"],[\"⛲\",\"fountain\"],[\"⛺\",\"tent\"],[\"🌁\",\"foggy\"],[\"🌃\",\"night-with-stars\"],[\"🌄\",\"sunrise-over-mountains\"],[\"🌅\",\"sunrise\"],[\"🌆\",\"cityscape-at-dusk\"],[\"🌇\",\"sunset\"],[\"🌉\",\"bridge-at-night\"],[\"♨️\",\"hot-springs\"],[\"🌌\",\"milky-way\"],[\"🎠\",\"carousel-horse\"],[\"🎡\",\"ferris-wheel\"],[\"🎢\",\"roller-coaster\"],[\"💈\",\"barber-pole\"],[\"🎪\",\"circus-tent\"],[\"🎭\",\"performing-arts\"],[\"🖼️\",\"framed-picture\"],[\"🎨\",\"artist-palette\"],[\"🎰\",\"slot-machine\"],[\"🚂\",\"locomotive\"],[\"🚃\",\"railway-car\"],[\"🚄\",\"high-speed-train\"],[\"🚅\",\"bullet-train\"],[\"🚆\",\"train\"],[\"🚇\",\"metro\"],[\"🚈\",\"light-rail\"],[\"🚉\",\"station\"],[\"🚊\",\"tram\"],[\"🚝\",\"monorail\"],[\"🚞\",\"mountain-railway\"],[\"🚋\",\"tram-car\"],[\"🚌\",\"bus\"],[\"🚍\",\"oncoming-bus\"],[\"🚎\",\"trolleybus\"],[\"🚐\",\"minibus\"],[\"🚑\",\"ambulance\"],[\"🚒\",\"fire-engine\"],[\"🚓\",\"police-car\"],[\"🚔\",\"oncoming-police-car\"],[\"🚕\",\"taxi\"],[\"🚖\",\"oncoming-taxi\"],[\"🚗\",\"automobile\"],[\"🚘\",\"oncoming-automobile\"],[\"🚙\",\"sport-utility-vehicle\"],[\"🚚\",\"delivery-truck\"],[\"🚛\",\"articulated-lorry\"],[\"🚜\",\"tractor\"],[\"🚲\",\"bicycle\"],[\"🛴\",\"kick-scooter\"],[\"🛵\",\"motor-scooter\"],[\"🚏\",\"bus-stop\"],[\"🛣️\",\"motorway\"],[\"🛤️\",\"railway-track\"],[\"⛽\",\"fuel-pump\"],[\"🚨\",\"police-car-light\"],[\"🚥\",\"horizontal-traffic-light\"],[\"🚦\",\"vertical-traffic-light\"],[\"🚧\",\"construction\"],[\"🛑\",\"stop-sign\"],[\"⚓\",\"anchor\"],[\"⛵\",\"sailboat\"],[\"🛶\",\"canoe\"],[\"🚤\",\"speedboat\"],[\"🛳️\",\"passenger-ship\"],[\"⛴️\",\"ferry\"],[\"🛥️\",\"motor-boat\"],[\"🚢\",\"ship\"],[\"✈️\",\"airplane\"],[\"🛩️\",\"small-airplane\"],[\"🛫\",\"airplane-departure\"],[\"🛬\",\"airplane-arrival\"],[\"💺\",\"seat\"],[\"🚁\",\"helicopter\"],[\"🚟\",\"suspension-railway\"],[\"🚠\",\"mountain-cableway\"],[\"🚡\",\"aerial-tramway\"],[\"🛰️\",\"satellite\"],[\"🚀\",\"rocket\"],[\"🛸\",\"flying-saucer\"],[\"🛎️\",\"bellhop-bell\"],[\"🚪\",\"door\"],[\"🛏️\",\"bed\"],[\"🛋️\",\"couch-and-lamp\"],[\"🚽\",\"toilet\"],[\"🚿\",\"shower\"],[\"🛁\",\"bathtub\"],[\"⌛\",\"hourglass-done\"],[\"⏳\",\"hourglass-not-done\"],[\"⌚\",\"watch\"],[\"⏰\",\"alarm-clock\"],[\"⏱️\",\"stopwatch\"],[\"⏲️\",\"timer-clock\"],[\"🕰️\",\"mantelpiece-clock\"],[\"🕛\",\"twelve-o-clock\"],[\"🕧\",\"twelve-thirty\"],[\"🕐\",\"one-o-clock\"],[\"🕜\",\"one-thirty\"],[\"🕑\",\"two-o-clock\"],[\"🕝\",\"two-thirty\"],[\"🕒\",\"three-o-clock\"],[\"🕞\",\"three-thirty\"],[\"🕓\",\"four-o-clock\"],[\"🕟\",\"four-thirty\"],[\"🕔\",\"five-o-clock\"],[\"🕠\",\"five-thirty\"],[\"🕕\",\"six-o-clock\"],[\"🕡\",\"six-thirty\"],[\"🕖\",\"seven-o-clock\"],[\"🕢\",\"seven-thirty\"],[\"🕗\",\"eight-o-clock\"],[\"🕣\",\"eight-thirty\"],[\"🕘\",\"nine-o-clock\"],[\"🕤\",\"nine-thirty\"],[\"🕙\",\"ten-o-clock\"],[\"🕥\",\"ten-thirty\"],[\"🕚\",\"eleven-o-clock\"],[\"🕦\",\"eleven-thirty\"],[\"🌑\",\"new-moon\"],[\"🌒\",\"waxing-crescent-moon\"],[\"🌓\",\"first-quarter-moon\"],[\"🌔\",\"waxing-gibbous-moon\"],[\"🌕\",\"full-moon\"],[\"🌖\",\"waning-gibbous-moon\"],[\"🌗\",\"last-quarter-moon\"],[\"🌘\",\"waning-crescent-moon\"],[\"🌙\",\"crescent-moon\"],[\"🌚\",\"new-moon\"],[\"🌛\",\"first-quarter-moon\"],[\"🌜\",\"last-quarter-moon\"],[\"🌡️\",\"thermometer\"],[\"☀️\",\"sun\"],[\"🌝\",\"full-moon\"],[\"🌞\",\"sun-with\"],[\"⭐\",\"white-medium-star\"],[\"🌟\",\"glowing-star\"],[\"🌠\",\"shooting-star\"],[\"☁️\",\"cloud\"],[\"⛅\",\"sun-behind-cloud\"],[\"⛈️\",\"cloud-with-lightning-and-rain\"],[\"🌤️\",\"sun-behind-small-cloud\"],[\"🌥️\",\"sun-behind-large-cloud\"],[\"🌦️\",\"sun-behind-rain-cloud\"],[\"🌧️\",\"cloud-with-rain\"],[\"🌨️\",\"cloud-with-snow\"],[\"🌩️\",\"cloud-with-lightning\"],[\"🌪️\",\"tornado\"],[\"🌫️\",\"fog\"],[\"🌬️\",\"wind\"],[\"🌀\",\"cyclone\"],[\"🌈\",\"rainbow\"],[\"🌂\",\"closed-umbrella\"],[\"☂️\",\"umbrella\"],[\"☔\",\"umbrella-with-rain-drops\"],[\"⛱️\",\"umbrella-on-ground\"],[\"⚡\",\"high-voltage\",[\"zap\",\"lightning\",\"electricity\"]],[\"❄️\",\"snowflake\"],[\"☃️\",\"snowman\"],[\"⛄\",\"snowman-without-snow\"],[\"☄️\",\"comet\"],[\"🔥\",\"fire\"],[\"💧\",\"droplet\"],[\"🌊\",\"water-wave\"],[\"🎃\",\"jack-o-lantern\"],[\"🎄\",\"christmas-tree\"],[\"🎆\",\"fireworks\"],[\"🎇\",\"sparkler\"],[\"✨\",\"sparkles\"],[\"🎈\",\"balloon\"],[\"🎉\",\"party-popper\"],[\"🎊\",\"confetti-ball\"],[\"🎋\",\"tanabata-tree\"],[\"🎍\",\"pine-decoration\"],[\"🎎\",\"japanese-dolls\"],[\"🎏\",\"carp-streamer\"],[\"🎐\",\"wind-chime\"],[\"🎑\",\"moon-viewing-ceremony\"],[\"🎀\",\"ribbon\"],[\"🎁\",\"wrapped-gift\"],[\"🎗️\",\"reminder-ribbon\"],[\"🎟️\",\"admission-tickets\"],[\"🎫\",\"ticket\"],[\"🎖️\",\"military-medal\"],[\"🏆\",\"trophy\"],[\"🏅\",\"sports-medal\"],[\"🥇\",\"1st-place-medal\"],[\"🥈\",\"2nd-place-medal\"],[\"🥉\",\"3rd-place-medal\"],[\"⚽\",\"soccer-ball\"],[\"⚾\",\"baseball\"],[\"🏀\",\"basketball\"],[\"🏐\",\"volleyball\"],[\"🏈\",\"american-football\"],[\"🏉\",\"rugby-football\"],[\"🎾\",\"tennis\"],[\"🎱\",\"pool-8-ball\"],[\"🎳\",\"bowling\"],[\"🏏\",\"cricket-game\"],[\"🏑\",\"field-hockey\"],[\"🏒\",\"ice-hockey\"],[\"🏓\",\"ping-pong\"],[\"🏸\",\"badminton\"],[\"🥊\",\"boxing-glove\"],[\"🥋\",\"martial-arts-uniform\"],[\"🥅\",\"goal-net\"],[\"🎯\",\"direct-hit\"],[\"⛳\",\"flag-in-hole\"],[\"⛸️\",\"ice-skate\"],[\"🎣\",\"fishing-pole\"],[\"🎽\",\"running-shirt\"],[\"🎿\",\"skis\"],[\"🛷\",\"sled\"],[\"🥌\",\"curling-stone\"],[\"🎮\",\"video-game\"],[\"🕹️\",\"joystick\"],[\"🎲\",\"game-die\"],[\"♠️\",\"spade-suit\"],[\"♥️\",\"heart-suit\"],[\"♦️\",\"diamond-suit\"],[\"♣️\",\"club-suit\"],[\"🃏\",\"joker\"],[\"🀄\",\"mahjong-red-dragon\"],[\"🎴\",\"flower-playing-cards\"],[\"🔇\",\"muted-speaker\"],[\"🔈\",\"speaker-low-volume\"],[\"🔉\",\"speaker-medium-volume\"],[\"🔊\",\"speaker-high-volume\"],[\"📢\",\"loudspeaker\"],[\"📣\",\"megaphone\"],[\"📯\",\"postal-horn\"],[\"🔔\",\"bell\"],[\"🔕\",\"bell-with-slash\"],[\"🎼\",\"musical-score\"],[\"🎵\",\"musical-note\"],[\"🎶\",\"musical-notes\"],[\"🎙️\",\"studio-microphone\"],[\"🎚️\",\"level-slider\"],[\"🎛️\",\"control-knobs\"],[\"🎤\",\"microphone\"],[\"🎧\",\"headphone\"],[\"📻\",\"radio\"],[\"🎷\",\"saxophone\"],[\"🎸\",\"guitar\"],[\"🎹\",\"musical-keyboard\"],[\"🎺\",\"trumpet\"],[\"🎻\",\"violin\"],[\"🥁\",\"drum\"],[\"📱\",\"mobile-phone\"],[\"📲\",\"mobile-phone-with-arrow\"],[\"☎️\",\"telephone\"],[\"📞\",\"telephone-receiver\"],[\"📟\",\"pager\"],[\"📠\",\"fax-machine\"],[\"🔋\",\"battery\"],[\"🔌\",\"electric-plug\"],[\"💻\",\"laptop-computer\"],[\"🖥️\",\"desktop-computer\"],[\"🖨️\",\"printer\"],[\"⌨️\",\"keyboard\"],[\"🖱️\",\"computer-mouse\"],[\"🖲️\",\"trackball\"],[\"💽\",\"computer-disk\"],[\"💾\",\"floppy-disk\"],[\"💿\",\"optical-disk\"],[\"📀\",\"dvd\"],[\"🎥\",\"movie-camera\"],[\"🎞️\",\"film-frames\"],[\"📽️\",\"film-projector\"],[\"🎬\",\"clapper-board\"],[\"📺\",\"television\"],[\"📷\",\"camera\"],[\"📸\",\"camera-with-flash\"],[\"📹\",\"video-camera\"],[\"📼\",\"videocassette\"],[\"🔍\",\"magnifying-glass-tilted-left\"],[\"🔎\",\"magnifying-glass-tilted-right\"],[\"🔬\",\"microscope\"],[\"🔭\",\"telescope\"],[\"📡\",\"satellite-antenna\"],[\"🕯️\",\"candle\"],[\"💡\",\"light-bulb\"],[\"🔦\",\"flashlight\"],[\"🏮\",\"red-paper-lantern\"],[\"📔\",\"notebook-with-decorative-cover\"],[\"📕\",\"closed-book\"],[\"📖\",\"open-book\"],[\"📗\",\"green-book\"],[\"📘\",\"blue-book\"],[\"📙\",\"orange-book\"],[\"📚\",\"books\"],[\"📓\",\"notebook\"],[\"📒\",\"ledger\"],[\"📃\",\"page-with-curl\"],[\"📜\",\"scroll\"],[\"📄\",\"page-facing-up\"],[\"📰\",\"newspaper\"],[\"🗞️\",\"rolled-up-newspaper\"],[\"📑\",\"bookmark-tabs\"],[\"🔖\",\"bookmark\"],[\"🏷️\",\"label\"],[\"💰\",\"money-bag\"],[\"💴\",\"yen-banknote\"],[\"💵\",\"dollar-banknote\"],[\"💶\",\"euro-banknote\"],[\"💷\",\"pound-banknote\"],[\"💸\",\"money-with-wings\"],[\"💳\",\"credit-card\"],[\"💹\",\"chart-increasing-with-yen\"],[\"💱\",\"currency-exchange\"],[\"💲\",\"heavy-dollar-sign\"],[\"✉️\",\"envelope\"],[\"📧\",\"e-mail\"],[\"📨\",\"incoming-envelope\"],[\"📩\",\"envelope-with-arrow\"],[\"📤\",\"outbox-tray\"],[\"📥\",\"inbox-tray\"],[\"📦\",\"package\"],[\"📫\",\"closed-mailbox-with-raised-flag\"],[\"📪\",\"closed-mailbox-with-lowered-flag\"],[\"📬\",\"open-mailbox-with-raised-flag\"],[\"📭\",\"open-mailbox-with-lowered-flag\"],[\"📮\",\"postbox\"],[\"🗳️\",\"ballot-box-with-ballot\"],[\"✏️\",\"pencil\"],[\"✒️\",\"black-nib\"],[\"🖋️\",\"fountain-pen\"],[\"🖊️\",\"pen\"],[\"🖌️\",\"paintbrush\"],[\"🖍️\",\"crayon\"],[\"📝\",\"memo\"],[\"💼\",\"briefcase\"],[\"📁\",\"file-folder\"],[\"📂\",\"open-file-folder\"],[\"🗂️\",\"card-index-dividers\"],[\"📅\",\"calendar\"],[\"📆\",\"tear-off-calendar\"],[\"🗒️\",\"spiral-notepad\"],[\"🗓️\",\"spiral-calendar\"],[\"📇\",\"card-index\"],[\"📈\",\"chart-increasing\"],[\"📉\",\"chart-decreasing\"],[\"📊\",\"bar-chart\"],[\"📋\",\"clipboard\"],[\"📌\",\"pushpin\"],[\"📍\",\"round-pushpin\"],[\"📎\",\"paperclip\"],[\"🖇️\",\"linked-paperclips\"],[\"📏\",\"straight-ruler\"],[\"📐\",\"triangular-ruler\"],[\"✂️\",\"scissors\"],[\"🗃️\",\"card-file-box\"],[\"🗄️\",\"file-cabinet\"],[\"🗑️\",\"wastebasket\"],[\"🔒\",\"locked\"],[\"🔓\",\"unlocked\"],[\"🔏\",\"locked-with-pen\"],[\"🔐\",\"locked-with-key\"],[\"🔑\",\"key\"],[\"🗝️\",\"old-key\"],[\"🔨\",\"hammer\"],[\"⛏️\",\"pick\"],[\"⚒️\",\"hammer-and-pick\"],[\"🛠️\",\"hammer-and-wrench\"],[\"🗡️\",\"dagger\"],[\"⚔️\",\"crossed-swords\"],[\"🔫\",\"pistol\"],[\"🏹\",\"bow-and-arrow\"],[\"🛡️\",\"shield\"],[\"🔧\",\"wrench\"],[\"🔩\",\"nut-and-bolt\"],[\"⚙️\",\"gear\"],[\"🗜️\",\"clamp\"],[\"⚗️\",\"alembic\"],[\"⚖️\",\"balance-scale\"],[\"🔗\",\"link\"],[\"⛓️\",\"chains\"],[\"💉\",\"syringe\"],[\"💊\",\"pill\"],[\"🚬\",\"cigarette\"],[\"⚰️\",\"coffin\"],[\"⚱️\",\"funeral-urn\"],[\"🗿\",\"moai\"],[\"🛢️\",\"oil-drum\"],[\"🔮\",\"crystal-ball\"],[\"🛒\",\"shopping-cart\"],[\"🏧\",\"atm-sign\"],[\"🚮\",\"litter-in-bin-sign\"],[\"🚰\",\"potable-water\"],[\"♿\",\"wheelchair-symbol\"],[\"🚹\",\"men-s-room\"],[\"🚺\",\"women-s-room\"],[\"🚻\",\"restroom\"],[\"🚼\",\"baby-symbol\"],[\"🚾\",\"water-closet\"],[\"🛂\",\"passport-control\"],[\"🛃\",\"customs\"],[\"🛄\",\"baggage-claim\"],[\"🛅\",\"left-luggage\"],[\"⚠️\",\"warning\"],[\"🚸\",\"children-crossing\"],[\"⛔\",\"no-entry\"],[\"🚫\",\"prohibited\"],[\"🚳\",\"no-bicycles\"],[\"🚭\",\"no-smoking\"],[\"🚯\",\"no-littering\"],[\"🚱\",\"non-potable-water\"],[\"🚷\",\"no-pedestrians\"],[\"📵\",\"no-mobile-phones\"],[\"🔞\",\"no-one-under-eighteen\"],[\"☢️\",\"radioactive\"],[\"☣️\",\"biohazard\"],[\"⬆️\",\"up-arrow\"],[\"↗️\",\"up-right-arrow\"],[\"➡️\",\"right-arrow\"],[\"↘️\",\"down-right-arrow\"],[\"⬇️\",\"down-arrow\"],[\"↙️\",\"down-left-arrow\"],[\"⬅️\",\"left-arrow\"],[\"↖️\",\"up-left-arrow\"],[\"↕️\",\"up-down-arrow\"],[\"↔️\",\"left-right-arrow\"],[\"↩️\",\"right-arrow-curving-left\"],[\"↪️\",\"left-arrow-curving-right\"],[\"⤴️\",\"right-arrow-curving-up\"],[\"⤵️\",\"right-arrow-curving-down\"],[\"🔃\",\"clockwise-vertical-arrows\"],[\"🔄\",\"counterclockwise-arrows-button\"],[\"🔙\",\"back-arrow\"],[\"🔚\",\"end-arrow\"],[\"🔛\",\"on-arrow\"],[\"🔜\",\"soon-arrow\"],[\"🔝\",\"top-arrow\"],[\"🛐\",\"place-of-worship\"],[\"⚛️\",\"atom-symbol\"],[\"🕉️\",\"om\"],[\"✡️\",\"star-of-david\"],[\"☸️\",\"wheel-of-dharma\"],[\"☯️\",\"yin-yang\"],[\"✝️\",\"latin-cross\"],[\"☦️\",\"orthodox-cross\"],[\"☪️\",\"star-and-crescent\"],[\"☮️\",\"peace-symbol\"],[\"🕎\",\"menorah\"],[\"🔯\",\"dotted-six-pointed-star\"],[\"♈\",\"aries\"],[\"♉\",\"taurus\"],[\"♊\",\"gemini\"],[\"♋\",\"cancer\"],[\"♌\",\"leo\"],[\"♍\",\"virgo\"],[\"♎\",\"libra\"],[\"♏\",\"scorpius\"],[\"♐\",\"sagittarius\"],[\"♑\",\"capricorn\"],[\"♒\",\"aquarius\"],[\"♓\",\"pisces\"],[\"⛎\",\"ophiuchus\"],[\"🔀\",\"shuffle-tracks-button\"],[\"🔁\",\"repeat-button\"],[\"🔂\",\"repeat-single-button\"],[\"▶️\",\"play-button\"],[\"⏩\",\"fast-forward-button\"],[\"⏭️\",\"next-track-button\"],[\"⏯️\",\"play-or-pause-button\"],[\"◀️\",\"reverse-button\"],[\"⏪\",\"fast-reverse-button\"],[\"⏮️\",\"last-track-button\"],[\"🔼\",\"up-button\"],[\"⏫\",\"fast-up-button\"],[\"🔽\",\"down-button\"],[\"⏬\",\"fast-down-button\"],[\"⏸️\",\"pause-button\"],[\"⏹️\",\"stop-button\"],[\"⏺️\",\"record-button\"],[\"⏏️\",\"eject-button\"],[\"🎦\",\"cinema\"],[\"🔅\",\"dim-button\"],[\"🔆\",\"bright-button\"],[\"📶\",\"antenna-bars\"],[\"📳\",\"vibration-mode\"],[\"📴\",\"mobile-phone-off\"],[\"♀️\",\"female-sign\"],[\"♂️\",\"male-sign\"],[\"⚕️\",\"medical-symbol\"],[\"♻️\",\"recycling-symbol\"],[\"⚜️\",\"fleur-de-lis\"],[\"🔱\",\"trident-emblem\"],[\"📛\",\"name-badge\"],[\"🔰\",\"japanese-symbol-for-beginner\"],[\"⭕\",\"heavy-large-circle\"],[\"✅\",\"white-heavy-check-mark\"],[\"☑️\",\"ballot-box-with-check\"],[\"✔️\",\"heavy-check-mark\"],[\"✖️\",\"heavy-multiplication-x\"],[\"❌\",\"cross-mark\"],[\"❎\",\"cross-mark-button\"],[\"➕\",\"heavy-plus-sign\"],[\"➖\",\"heavy-minus-sign\"],[\"➗\",\"heavy-division-sign\"],[\"➰\",\"curly-loop\"],[\"➿\",\"double-curly-loop\"],[\"〽️\",\"part-alternation-mark\"],[\"✳️\",\"eight-spoked-asterisk\"],[\"✴️\",\"eight-pointed-star\"],[\"❇️\",\"sparkle\"],[\"‼️\",\"double-exclamation-mark\"],[\"⁉️\",\"exclamation-question-mark\"],[\"❓\",\"question-mark\"],[\"❔\",\"white-question-mark\"],[\"❕\",\"white-exclamation-mark\"],[\"❗\",\"exclamation-mark\"],[\"〰️\",\"wavy-dash\"],[\"©️\",\"copyright\"],[\"®️\",\"registered\"],[\"™️\",\"trade-mark\"],[\"#️⃣\",\"keycap\"],[\"*️⃣\",\"keycap\"],[\"\",\"0-keycap-0\"],[\"\",\"1-keycap-1\"],[\"\",\"2-keycap-2\"],[\"\",\"3-keycap-3\"],[\"\",\"4-keycap-4\"],[\"\",\"5-keycap-5\"],[\"\",\"6-keycap-6\"],[\"\",\"7-keycap-7\"],[\"\",\"8-keycap-8\"],[\"\",\"9-keycap-9\"],[\"🔟\",\"keycap-10\"],[\"💯\",\"hundred-points\"],[\"🔠\",\"input-latin-uppercase\"],[\"🔡\",\"input-latin-lowercase\"],[\"🔢\",\"input-numbers\"],[\"🔣\",\"input-symbols\"],[\"🔤\",\"input-latin-letters\"],[\"🅰️\",\"a-button-blood-type\"],[\"🆎\",\"ab-button-blood-type\"],[\"🅱️\",\"b-button-blood-type\"],[\"🆑\",\"cl-button\"],[\"🆒\",\"cool-button\"],[\"🆓\",\"free-button\"],[\"ℹ️\",\"information\"],[\"🆔\",\"id-button\"],[\"Ⓜ️\",\"circled-m\"],[\"🆕\",\"new-button\"],[\"🆖\",\"ng-button\"],[\"🅾️\",\"o-button-blood-type\"],[\"🆗\",\"ok-button\"],[\"🅿️\",\"p-button\"],[\"🆘\",\"sos-button\"],[\"🆙\",\"up-button\"],[\"🆚\",\"vs-button\"],[\"🈁\",\"japanese-here-button\"],[\"🈂️\",\"japanese-service-charge-button\"],[\"🈷️\",\"japanese-monthly-amount-button\"],[\"🈶\",\"japanese-not-free-of-charge-button\"],[\"🈯\",\"japanese-reserved-button\"],[\"🉐\",\"japanese-bargain-button\"],[\"🈹\",\"japanese-discount-button\"],[\"🈚\",\"japanese-free-of-charge-button\"],[\"🈲\",\"japanese-prohibited-button\"],[\"🉑\",\"japanese-acceptable-button\"],[\"🈸\",\"japanese-application-button\"],[\"🈴\",\"japanese-passing-grade-button\"],[\"🈳\",\"japanese-vacancy-button\"],[\"㊗️\",\"japanese-congratulations-button\"],[\"㊙️\",\"japanese-secret-button\"],[\"🈺\",\"japanese-open-for-business-button\"],[\"🈵\",\"japanese-no-vacancy-button\"],[\"▪️\",\"black-small-square\"],[\"▫️\",\"white-small-square\"],[\"◻️\",\"white-medium-square\"],[\"◼️\",\"black-medium-square\"],[\"◽\",\"white-medium-small-square\"],[\"◾\",\"black-medium-small-square\"],[\"⬛\",\"black-large-square\"],[\"⬜\",\"white-large-square\"],[\"🔶\",\"large-orange-diamond\"],[\"🔷\",\"large-blue-diamond\"],[\"🔸\",\"small-orange-diamond\"],[\"🔹\",\"small-blue-diamond\"],[\"🔺\",\"red-triangle-pointed-up\"],[\"🔻\",\"red-triangle-pointed-down\"],[\"💠\",\"diamond-with-a-dot\"],[\"🔘\",\"radio-button\"],[\"🔲\",\"black-square-button\"],[\"🔳\",\"white-square-button\"],[\"⚪\",\"white-circle\"],[\"⚫\",\"black-circle\"],[\"🔴\",\"red-circle\"],[\"🔵\",\"blue-circle\"],[\"🏁\",\"chequered-flag\"],[\"🚩\",\"triangular-flag\"],[\"🎌\",\"crossed-flags\"],[\"🏴\",\"black-flag\"],[\"🏳️\",\"white-flag\"],[\"🏳️‍🌈\",\"rainbow-flag\"],[\"🇦🇨\",\"ascension-island\"],[\"🇦🇩\",\"andorra\"],[\"🇦🇪\",\"united-arab-emirates\"],[\"🇦🇫\",\"afghanistan\"],[\"🇦🇬\",\"antigua-barbuda\"],[\"🇦🇮\",\"anguilla\"],[\"🇦🇱\",\"albania\"],[\"🇦🇲\",\"armenia\"],[\"🇦🇴\",\"angola\"],[\"🇦🇶\",\"antarctica\"],[\"🇦🇷\",\"argentina\"],[\"🇦🇸\",\"american-samoa\"],[\"🇦🇹\",\"austria\"],[\"🇦🇺\",\"australia\"],[\"🇦🇼\",\"aruba\"],[\"🇦🇽 Å\",\"land-islands\"],[\"🇦🇿\",\"azerbaijan\"],[\"🇧🇦\",\"bosnia-herzegovina\"],[\"🇧🇧\",\"barbados\"],[\"🇧🇩\",\"bangladesh\"],[\"🇧🇪\",\"belgium\"],[\"🇧🇫\",\"burkina-faso\"],[\"🇧🇬\",\"bulgaria\"],[\"🇧🇭\",\"bahrain\"],[\"🇧🇮\",\"burundi\"],[\"🇧🇯\",\"benin\"],[\"🇧🇱\",\"st-barth-lemy\"],[\"🇧🇲\",\"bermuda\"],[\"🇧🇳\",\"brunei\"],[\"🇧🇴\",\"bolivia\"],[\"🇧🇶\",\"caribbean-netherlands\"],[\"🇧🇷\",\"brazil\"],[\"🇧🇸\",\"bahamas\"],[\"🇧🇹\",\"bhutan\"],[\"🇧🇻\",\"bouvet-island\"],[\"🇧🇼\",\"botswana\"],[\"🇧🇾\",\"belarus\"],[\"🇧🇿\",\"belize\"],[\"🇨🇦\",\"canada\"],[\"🇨🇨\",\"cocos-keeling-islands\"],[\"🇨🇩\",\"congo-kinshasa\"],[\"🇨🇫\",\"central-african-republic\"],[\"🇨🇬\",\"congo-brazzaville\"],[\"🇨🇭\",\"switzerland\"],[\"🇨🇮\",\"c-te-d-ivoire\"],[\"🇨🇰\",\"cook-islands\"],[\"🇨🇱\",\"chile\"],[\"🇨🇲\",\"cameroon\"],[\"🇨🇳\",\"china\"],[\"🇨🇴\",\"colombia\"],[\"🇨🇵\",\"clipperton-island\"],[\"🇨🇷\",\"costa-rica\"],[\"🇨🇺\",\"cuba\"],[\"🇨🇻\",\"cape-verde\"],[\"🇨🇼\",\"cura-ao\"],[\"🇨🇽\",\"christmas-island\"],[\"🇨🇾\",\"cyprus\"],[\"🇨🇿\",\"czechia\"],[\"🇩🇪\",\"germany\"],[\"🇩🇬\",\"diego-garcia\"],[\"🇩🇯\",\"djibouti\"],[\"🇩🇰\",\"denmark\"],[\"🇩🇲\",\"dominica\"],[\"🇩🇴\",\"dominican-republic\"],[\"🇩🇿\",\"algeria\"],[\"🇪🇦\",\"ceuta-melilla\"],[\"🇪🇨\",\"ecuador\"],[\"🇪🇪\",\"estonia\"],[\"🇪🇬\",\"egypt\"],[\"🇪🇭\",\"western-sahara\"],[\"🇪🇷\",\"eritrea\"],[\"🇪🇸\",\"spain\"],[\"🇪🇹\",\"ethiopia\"],[\"🇪🇺\",\"european-union\"],[\"🇫🇮\",\"finland\"],[\"🇫🇯\",\"fiji\"],[\"🇫🇰\",\"falkland-islands\"],[\"🇫🇲\",\"micronesia\"],[\"🇫🇴\",\"faroe-islands\"],[\"🇫🇷\",\"france\"],[\"🇬🇦\",\"gabon\"],[\"🇬🇧\",\"united-kingdom\"],[\"🇬🇩\",\"grenada\"],[\"🇬🇪\",\"georgia\"],[\"🇬🇫\",\"french-guiana\"],[\"🇬🇬\",\"guernsey\"],[\"🇬🇭\",\"ghana\"],[\"🇬🇮\",\"gibraltar\"],[\"🇬🇱\",\"greenland\"],[\"🇬🇲\",\"gambia\"],[\"🇬🇳\",\"guinea\"],[\"🇬🇵\",\"guadeloupe\"],[\"🇬🇶\",\"equatorial-guinea\"],[\"🇬🇷\",\"greece\"],[\"🇬🇸\",\"south-georgia-south-sandwich-islands\"],[\"🇬🇹\",\"guatemala\"],[\"🇬🇺\",\"guam\"],[\"🇬🇼\",\"guinea-bissau\"],[\"🇬🇾\",\"guyana\"],[\"🇭🇰\",\"hong-kong-sar-china\"],[\"🇭🇲\",\"heard-mcdonald-islands\"],[\"🇭🇳\",\"honduras\"],[\"🇭🇷\",\"croatia\"],[\"🇭🇹\",\"haiti\"],[\"🇭🇺\",\"hungary\"],[\"🇮🇨\",\"canary-islands\"],[\"🇮🇩\",\"indonesia\"],[\"🇮🇪\",\"ireland\"],[\"🇮🇱\",\"israel\"],[\"🇮🇲\",\"isle-of-man\"],[\"🇮🇳\",\"india\"],[\"🇮🇴\",\"british-indian-ocean-territory\"],[\"🇮🇶\",\"iraq\"],[\"🇮🇷\",\"iran\"],[\"🇮🇸\",\"iceland\"],[\"🇮🇹\",\"italy\"],[\"🇯🇪\",\"jersey\"],[\"🇯🇲\",\"jamaica\"],[\"🇯🇴\",\"jordan\"],[\"🇯🇵\",\"japan\"],[\"🇰🇪\",\"kenya\"],[\"🇰🇬\",\"kyrgyzstan\"],[\"🇰🇭\",\"cambodia\"],[\"🇰🇮\",\"kiribati\"],[\"🇰🇲\",\"comoros\"],[\"🇰🇳\",\"st-kitts-nevis\"],[\"🇰🇵\",\"north-korea\"],[\"🇰🇷\",\"south-korea\"],[\"🇰🇼\",\"kuwait\"],[\"🇰🇾\",\"cayman-islands\"],[\"🇰🇿\",\"kazakhstan\"],[\"🇱🇦\",\"laos\"],[\"🇱🇧\",\"lebanon\"],[\"🇱🇨\",\"st-lucia\"],[\"🇱🇮\",\"liechtenstein\"],[\"🇱🇰\",\"sri-lanka\"],[\"🇱🇷\",\"liberia\"],[\"🇱🇸\",\"lesotho\"],[\"🇱🇹\",\"lithuania\"],[\"🇱🇺\",\"luxembourg\"],[\"🇱🇻\",\"latvia\"],[\"🇱🇾\",\"libya\"],[\"🇲🇦\",\"morocco\"],[\"🇲🇨\",\"monaco\"],[\"🇲🇩\",\"moldova\"],[\"🇲🇪\",\"montenegro\"],[\"🇲🇫\",\"st-martin\"],[\"🇲🇬\",\"madagascar\"],[\"🇲🇭\",\"marshall-islands\"],[\"🇲🇰\",\"macedonia\"],[\"🇲🇱\",\"mali\"],[\"🇲🇲\",\"myanmar-burma\"],[\"🇲🇳\",\"mongolia\"],[\"🇲🇴\",\"macau-sar-china\"],[\"🇲🇵\",\"northern-mariana-islands\"],[\"🇲🇶\",\"martinique\"],[\"🇲🇷\",\"mauritania\"],[\"🇲🇸\",\"montserrat\"],[\"🇲🇹\",\"malta\"],[\"🇲🇺\",\"mauritius\"],[\"🇲🇻\",\"maldives\"],[\"🇲🇼\",\"malawi\"],[\"🇲🇽\",\"mexico\"],[\"🇲🇾\",\"malaysia\"],[\"🇲🇿\",\"mozambique\"],[\"🇳🇦\",\"namibia\"],[\"🇳🇨\",\"new-caledonia\"],[\"🇳🇪\",\"niger\"],[\"🇳🇫\",\"norfolk-island\"],[\"🇳🇬\",\"nigeria\"],[\"🇳🇮\",\"nicaragua\"],[\"🇳🇱\",\"netherlands\"],[\"🇳🇴\",\"norway\"],[\"🇳🇵\",\"nepal\"],[\"🇳🇷\",\"nauru\"],[\"🇳🇺\",\"niue\"],[\"🇳🇿\",\"new-zealand\"],[\"🇴🇲\",\"oman\"],[\"🇵🇦\",\"panama\"],[\"🇵🇪\",\"peru\"],[\"🇵🇫\",\"french-polynesia\"],[\"🇵🇬\",\"papua-new-guinea\"],[\"🇵🇭\",\"philippines\"],[\"🇵🇰\",\"pakistan\"],[\"🇵🇱\",\"poland\"],[\"🇵🇲\",\"st-pierre-miquelon\"],[\"🇵🇳\",\"pitcairn-islands\"],[\"🇵🇷\",\"puerto-rico\"],[\"🇵🇸\",\"palestinian-territories\"],[\"🇵🇹\",\"portugal\"],[\"🇵🇼\",\"palau\"],[\"🇵🇾\",\"paraguay\"],[\"🇶🇦\",\"qatar\"],[\"🇷🇪\",\"r-union\"],[\"🇷🇴\",\"romania\"],[\"🇷🇸\",\"serbia\"],[\"🇷🇺\",\"russia\"],[\"🇷🇼\",\"rwanda\"],[\"🇸🇦\",\"saudi-arabia\"],[\"🇸🇧\",\"solomon-islands\"],[\"🇸🇨\",\"seychelles\"],[\"🇸🇩\",\"sudan\"],[\"🇸🇪\",\"sweden\"],[\"🇸🇬\",\"singapore\"],[\"🇸🇭\",\"st-helena\"],[\"🇸🇮\",\"slovenia\"],[\"🇸🇯\",\"svalbard-jan-mayen\"],[\"🇸🇰\",\"slovakia\"],[\"🇸🇱\",\"sierra-leone\"],[\"🇸🇲\",\"san-marino\"],[\"🇸🇳\",\"senegal\"],[\"🇸🇴\",\"somalia\"],[\"🇸🇷\",\"suriname\"],[\"🇸🇸\",\"south-sudan\"],[\"🇸🇹\",\"s-o-tom-pr-ncipe\"],[\"🇸🇻\",\"el-salvador\"],[\"🇸🇽\",\"sint-maarten\"],[\"🇸🇾\",\"syria\"],[\"🇸🇿\",\"swaziland\"],[\"🇹🇦\",\"tristan-da-cunha\"],[\"🇹🇨\",\"turks-caicos-islands\"],[\"🇹🇩\",\"chad\"],[\"🇹🇫\",\"french-southern-territories\"],[\"🇹🇬\",\"togo\"],[\"🇹🇭\",\"thailand\"],[\"🇹🇯\",\"tajikistan\"],[\"🇹🇰\",\"tokelau\"],[\"🇹🇱\",\"timor-leste\"],[\"🇹🇲\",\"turkmenistan\"],[\"🇹🇳\",\"tunisia\"],[\"🇹🇴\",\"tonga\"],[\"🇹🇷\",\"turkey\"],[\"🇹🇹\",\"trinidad-tobago\"],[\"🇹🇻\",\"tuvalu\"],[\"🇹🇼\",\"taiwan\"],[\"🇹🇿\",\"tanzania\"],[\"🇺🇦\",\"ukraine\"],[\"🇺🇬\",\"uganda\"],[\"🇺🇲\",\"u-s-outlying-islands\"],[\"🇺🇳\",\"united-nations\"],[\"🇺🇸\",\"united-states\"],[\"🇺🇾\",\"uruguay\"],[\"🇺🇿\",\"uzbekistan\"],[\"🇻🇦\",\"vatican-city\"],[\"🇻🇨\",\"st-vincent-grenadines\"],[\"🇻🇪\",\"venezuela\"],[\"🇻🇬\",\"british-virgin-islands\"],[\"🇻🇮\",\"u-s-virgin-islands\"],[\"🇻🇳\",\"vietnam\"],[\"🇻🇺\",\"vanuatu\"],[\"🇼🇫\",\"wallis-futuna\"],[\"🇼🇸\",\"samoa\"],[\"🇽🇰\",\"kosovo\"],[\"🇾🇪\",\"yemen\"],[\"🇾🇹\",\"mayotte\"],[\"🇿🇦\",\"south-africa\"],[\"🇿🇲\",\"zambia\"],[\"🇿🇼\",\"zimbabwe\"],[\"🏴󠁧󠁢󠁥󠁮󠁧󠁿\",\"england\"],[\"🏴󠁧󠁢󠁳󠁣󠁴󠁿\",\"scotland\"],[\"🏴󠁧󠁢󠁷󠁬󠁳󠁿\",\"wales\"],[\"©\",\"char-copyright\"],[\"™\",\"char-trademark\"],[\"£\",\"char-pound\"],[\"€\",\"char-euro\"],[\"·\",\"char-interpunct\",[\"middot\",\"centered\",\"dot\"]]];"]}